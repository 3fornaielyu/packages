/**********************************************************************
 * Extern for ol
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ol = {
  "AssertionError": {
    "stackTraceLimit": {}
  },
  "Collection": {
    "CollectionEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "unByKey": function () { }
  },
  "DataTile": function () { },
  "Disposable": function () { },
  "Feature": {
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "createStyleFunction": function () { },
    "unByKey": function () { }
  },
  "Geolocation": {
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "unByKey": function () { }
  },
  "HexGrid": function () { },
  "Image": {
    "listenImage": function () { }
  },
  "ImageBase": function () { },
  "ImageCanvas": function () { },
  "ImageTile": function () { },
  "InseeGrid": {
    "extent": {}
  },
  "Kinetic": function () { },
  "Map": {
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "unByKey": function () { }
  },
  "MapBrowserEvent": {
    "preventDefault": function () { },
    "stopPropagation": function () { }
  },
  "MapBrowserEventHandler": function () { },
  "MapEvent": {
    "preventDefault": function () { },
    "stopPropagation": function () { }
  },
  "Object": {
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "unByKey": function () { }
  },
  "Observable": {
    "unByKey": function () { }
  },
  "Overlay": {
    "AnimatedCanvas": function () { },
    "Fixed": function () { },
    "FixedPopup": function () { },
    "Magnify": function () { },
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "Placemark": function () { },
    "Popup": function () { },
    "PopupFeature": {
      "localString": function () { }
    },
    "Tooltip": function () { },
    "unByKey": function () { }
  },
  "PerspectiveMap": function () { },
  "PluggableMap": {
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "unByKey": function () { }
  },
  "Tile": function () { },
  "TileCache": function () { },
  "TileQueue": {
    "DROP": {},
    "getTilePriority": function () { }
  },
  "TileRange": {
    "createOrUpdate": function () { }
  },
  "VectorRenderTile": function () { },
  "VectorTile": function () { },
  "View": {
    "ObjectEvent": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "createCenterConstraint": function () { },
    "createResolutionConstraint": function () { },
    "createRotationConstraint": function () { },
    "isNoopAnimation": function () { },
    "unByKey": function () { }
  },
  "array": {
    "binarySearch": function () { },
    "equals": function () { },
    "extend": function () { },
    "find": function () { },
    "findIndex": function () { },
    "includes": function () { },
    "isSorted": function () { },
    "linearFindNearest": function () { },
    "numberSafeCompareFunction": function () { },
    "remove": function () { },
    "reverseSubArray": function () { },
    "stableSort": function () { }
  },
  "asserts": {
    "assert": function () { }
  },
  "centerconstraint": {
    "createExtent": function () { },
    "none": function () { }
  },
  "color": {
    "asArray": function () { },
    "asString": function () { },
    "fromHSL": function () { },
    "fromHSV": function () { },
    "fromString": function () { },
    "isStringColor": function () { },
    "normalize": function () { },
    "toHSL": function () { },
    "toHSV": function () { },
    "toHexa": function () { },
    "toString": function () { }
  },
  "colorlike": {
    "asColorLike": function () { }
  },
  "control": {
    "Attribution": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Bar": function () { },
    "Button": function () { },
    "CanvasAttribution": function () { },
    "CanvasBase": function () { },
    "CanvasScaleLine": function () { },
    "CanvasTitle": function () { },
    "CenterPosition": function () { },
    "Compass": function () { },
    "Control": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Dialog": function () { },
    "Disable": function () { },
    "EditBar": function () { },
    "FullScreen": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Gauge": function () { },
    "GeoBookmark": function () { },
    "GeolocationBar": function () { },
    "GeolocationButton": function () { },
    "Globe": function () { },
    "Graticule": function () { },
    "GridReference": function () { },
    "Imageline": function () { },
    "IsochroneGeoportail": function () { },
    "LayerPopup": function () { },
    "LayerShop": function () { },
    "LayerSwitcher": function () { },
    "LayerSwitcherImage": function () { },
    "Legend": function () { },
    "MapZone": {
      "zones": {
        "DOM": {},
        "DOMTOM": {},
        "TOM": {}
      }
    },
    "MousePosition": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Notification": function () { },
    "Overlay": function () { },
    "Overview": function () { },
    "OverviewMap": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Permalink": function () { },
    "Print": function () { },
    "PrintDialog": {
      "addLang": function () { }
    },
    "Profil": function () { },
    "ProgressBar": function () { },
    "Rotate": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "RoutingGeoportail": function () { },
    "Scale": function () { },
    "ScaleLine": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Search": function () { },
    "SearchBAN": function () { },
    "SearchDFCI": function () { },
    "SearchFeature": function () { },
    "SearchGPS": function () { },
    "SearchGeoportail": function () { },
    "SearchGeoportailParcelle": function () { },
    "SearchJSON": function () { },
    "SearchNominatim": function () { },
    "SearchPhoton": function () { },
    "SearchWikipedia": function () { },
    "Select": function () { },
    "SelectBase": function () { },
    "SelectCheck": function () { },
    "SelectCondition": function () { },
    "SelectFulltext": function () { },
    "SelectMulti": function () { },
    "SelectPopup": function () { },
    "Status": function () { },
    "Storymap": function () { },
    "Swipe": function () { },
    "SwipeMap": function () { },
    "Target": function () { },
    "TextButton": function () { },
    "Timeline": function () { },
    "Toggle": function () { },
    "VideoRecorder": function () { },
    "WMSCapabilities": function () { },
    "WMTSCapabilities": function () { },
    "Zoom": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "ZoomSlider": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "ZoomToExtent": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "defaults": function () { }
  },
  "coordinate": {
    "GPAltiCode": function () { },
    "add": function () { },
    "closestOnCircle": function () { },
    "closestOnSegment": function () { },
    "convexHull": function () { },
    "createStringXY": function () { },
    "cspline": function () { },
    "degreesToStringHDMS": function () { },
    "dist2d": function () { },
    "distance": function () { },
    "equal": function () { },
    "equals": function () { },
    "findSegment": function () { },
    "format": function () { },
    "fromDFCI": function () { },
    "getFeatureCenter": function () { },
    "getGeomCenter": function () { },
    "getIntersectionPoint": function () { },
    "getWorldsAway": function () { },
    "offsetCoords": function () { },
    "rotate": function () { },
    "sampleAt": function () { },
    "scale": function () { },
    "splitH": function () { },
    "squaredDistance": function () { },
    "squaredDistanceToSegment": function () { },
    "toDFCI": function () { },
    "toStringHDMS": function () { },
    "toStringXY": function () { },
    "validDFCI": function () { },
    "validDFCICoord": function () { },
    "wrapX": function () { }
  },
  "css": {
    "CLASS_COLLAPSED": {},
    "CLASS_CONTROL": {},
    "CLASS_HIDDEN": {},
    "CLASS_SELECTABLE": {},
    "CLASS_UNSELECTABLE": {},
    "CLASS_UNSUPPORTED": {},
    "cssOpacity": function () { },
    "getFontParameters": function () { }
  },
  "dom": {
    "createCanvasContext2D": function () { },
    "outerHeight": function () { },
    "outerWidth": function () { },
    "removeChildren": function () { },
    "removeNode": function () { },
    "replaceChildren": function () { },
    "replaceNode": function () { }
  },
  "easing": {
    "easeIn": function () { },
    "easeOut": function () { },
    "inAndOut": function () { },
    "linear": function () { },
    "upAndDown": function () { }
  },
  "events": {
    "Event": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "Target": function () { },
    "condition": {
      "all": function () { },
      "altKeyOnly": function () { },
      "altShiftKeysOnly": function () { },
      "always": function () { },
      "click": function () { },
      "doubleClick": function () { },
      "focus": function () { },
      "focusWithTabindex": function () { },
      "mouseActionButton": function () { },
      "mouseOnly": function () { },
      "never": function () { },
      "noModifierKeys": function () { },
      "penOnly": function () { },
      "platformModifierKeyOnly": function () { },
      "pointerMove": function () { },
      "primaryAction": function () { },
      "shiftKeyOnly": function () { },
      "singleClick": function () { },
      "targetNotEditable": function () { },
      "touchOnly": function () { }
    },
    "listen": function () { },
    "listenOnce": function () { },
    "unlistenByKey": function () { }
  },
  "ext": {
    "Ajax": {
      "get": function () { },
      "getCORS": function () { }
    },
    "SVGFilter": {
      "Laplacian": function () { },
      "Paper": function () { },
      "Prewitt": function () { },
      "Roberts": function () { },
      "Sobel": function () { }
    },
    "SVGOperation": function () { },
    "element": {
      "addListener": function () { },
      "appendText": function () { },
      "create": function () { },
      "createCheck": function () { },
      "createSwitch": function () { },
      "dispatchEvent": function () { },
      "getFixedOffset": function () { },
      "getStyle": function () { },
      "hidden": function () { },
      "hide": function () { },
      "offsetRect": function () { },
      "outerHeight": function () { },
      "outerWidth": function () { },
      "positionRect": function () { },
      "removeListener": function () { },
      "scrollDiv": function () { },
      "setHTML": function () { },
      "setStyle": function () { },
      "show": function () { },
      "toggle": function () { }
    },
    "getElevationFromPixel": function () { },
    "getMapCanvas": function () { },
    "getPixelFromElevation": function () { },
    "getVectorContextStyle": function () { },
    "imageLoader": {
      "elevationMap": function () { },
      "grayscale": function () { },
      "loadBILImage": function () { },
      "loadImage": function () { },
      "pixelTransform": function () { },
      "seaLevelMap": function () { },
      "shadedRelief": function () { },
      "transparent": function () { }
    },
    "inherits": function () { },
    "input": {
      "Base": function () { },
      "Checkbox": function () { },
      "Collection": function () { },
      "Color": {
        "customColorList": {}
      },
      "List": function () { },
      "PopupBase": function () { },
      "Radio": function () { },
      "Range": function () { },
      "Size": function () { },
      "Slider": function () { },
      "Switch": function () { },
      "Width": function () { }
    },
    "olVersion": {}
  },
  "extent": {
    "applyTransform": function () { },
    "approximatelyEquals": function () { },
    "boundingExtent": function () { },
    "buffer": function () { },
    "clone": function () { },
    "closestSquaredDistanceXY": function () { },
    "containsCoordinate": function () { },
    "containsExtent": function () { },
    "containsXY": function () { },
    "coordinateRelationship": function () { },
    "createEmpty": function () { },
    "createOrUpdate": function () { },
    "createOrUpdateEmpty": function () { },
    "createOrUpdateFromCoordinate": function () { },
    "createOrUpdateFromCoordinates": function () { },
    "createOrUpdateFromFlatCoordinates": function () { },
    "createOrUpdateFromRings": function () { },
    "equals": function () { },
    "extend": function () { },
    "extendCoordinate": function () { },
    "extendCoordinates": function () { },
    "extendFlatCoordinates": function () { },
    "extendRings": function () { },
    "extendXY": function () { },
    "forEachCorner": function () { },
    "getArea": function () { },
    "getBottomLeft": function () { },
    "getBottomRight": function () { },
    "getCenter": function () { },
    "getCorner": function () { },
    "getEnlargedArea": function () { },
    "getForViewAndSize": function () { },
    "getHeight": function () { },
    "getIntersection": function () { },
    "getIntersectionArea": function () { },
    "getMargin": function () { },
    "getSize": function () { },
    "getTopLeft": function () { },
    "getTopRight": function () { },
    "getWidth": function () { },
    "intersection": function () { },
    "intersects": function () { },
    "intersectsSegment": function () { },
    "isEmpty": function () { },
    "returnOrUpdate": function () { },
    "scaleFromCenter": function () { },
    "wrapX": function () { }
  },
  "featureAnimation": {
    "Blink": function () { },
    "Bounce": function () { },
    "Drop": function () { },
    "Fade": function () { },
    "None": function () { },
    "Null": function () { },
    "Path": function () { },
    "Shake": function () { },
    "Show": function () { },
    "Slide": function () { },
    "Teleport": function () { },
    "Throw": function () { },
    "Zoom": function () { },
    "ZoomOut": function () { },
    "hiddenStyle": {
      "$r": {},
      "Ha": {},
      "Nt": {
        "Dr": {},
        "Jt": {},
        "Kt": {},
        "Sa": function () { },
        "Ut": {},
        "ba": function () { },
        "ca": {},
        "clone": function () { },
        "constructor": function () { },
        "createRenderOptions": function () { },
        "da": {},
        "fa": {},
        "fs": {},
        "ga": function () { },
        "getAnchor": function () { },
        "getAngle": function () { },
        "getDisplacement": function () { },
        "getFill": function () { },
        "getHitDetectionImage": function () { },
        "getImage": function () { },
        "getImagePNG": function () { },
        "getImageSize": function () { },
        "getImageState": function () { },
        "getOpacity": function () { },
        "getOrigin": function () { },
        "getPixelRatio": function () { },
        "getPoints": function () { },
        "getRadius": function () { },
        "getRadius2": function () { },
        "getRotateWithView": function () { },
        "getRotation": function () { },
        "getScale": function () { },
        "getScaleArray": function () { },
        "getSize": function () { },
        "getStroke": function () { },
        "ha": {},
        "ja": function () { },
        "ko": {},
        "la": {},
        "listenImageChange": function () { },
        "load": function () { },
        "ma": {},
        "pa": {},
        "render": function () { },
        "setDisplacement": function () { },
        "setOpacity": function () { },
        "setRadius": function () { },
        "setRotateWithView": function () { },
        "setRotation": function () { },
        "setScale": function () { },
        "ua": {},
        "unlistenImageChange": function () { },
        "va": {},
        "wa": {
          "lineDash": {},
          "lineDashOffset": {},
          "lineJoin": {},
          "miterLimit": {},
          "size": {},
          "strokeStyle": {},
          "strokeWidth": {}
        },
        "xa": function () { },
        "ya": {}
      },
      "Va": function () { },
      "Xa": {},
      "clone": function () { },
      "cn": {},
      "da": {},
      "getFill": function () { },
      "getGeometry": function () { },
      "getGeometryFunction": function () { },
      "getHitDetectionRenderer": function () { },
      "getImage": function () { },
      "getRenderer": function () { },
      "getStroke": function () { },
      "getText": function () { },
      "getZIndex": function () { },
      "ma": {
        "Ba": {},
        "Da": {},
        "Ga": {},
        "Ua": {},
        "Wa": {},
        "clone": function () { },
        "getColor": function () { },
        "getLineCap": function () { },
        "getLineDash": function () { },
        "getLineDashOffset": function () { },
        "getLineJoin": function () { },
        "getMiterLimit": function () { },
        "getWidth": function () { },
        "ka": {},
        "qa": {},
        "setColor": function () { },
        "setLineCap": function () { },
        "setLineDash": function () { },
        "setLineDashOffset": function () { },
        "setLineJoin": function () { },
        "setMiterLimit": function () { },
        "setWidth": function () { }
      },
      "oo": {},
      "setFill": function () { },
      "setGeometry": function () { },
      "setHitDetectionRenderer": function () { },
      "setImage": function () { },
      "setRenderer": function () { },
      "setStroke": function () { },
      "setText": function () { },
      "setZIndex": function () { }
    }
  },
  "featureloader": {
    "loadFeaturesXhr": function () { },
    "setWithCredentials": function () { },
    "xhr": function () { }
  },
  "filter": {
    "Base": function () { },
    "CSS": function () { },
    "CanvasFilter": function () { },
    "Clip": function () { },
    "Colorize": function () { },
    "Composite": function () { },
    "Crop": function () { },
    "Fold": function () { },
    "Halftone": function () { },
    "Lego": function () { },
    "Mask": function () { },
    "Paper": function () { },
    "PencilSketch": function () { },
    "Pointillism": function () { },
    "SVGFilter": function () { },
    "Texture": function () { }
  },
  "format": {
    "EsriJSON": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "Feature": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GML": {
      "GMLNS": {},
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GML2": {
      "GMLNS": {},
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GML3": {
      "GMLNS": {},
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GML32": {
      "GMLNS": {},
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GMLBase": {
      "GMLNS": {},
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GPX": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GeoJSON": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "GeoJSONP": function () { },
    "GeoJSONX": function () { },
    "GeoRSS": function () { },
    "IGC": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "IIIFInfo": function () { },
    "JSONFeature": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "KML": {
      "getDefaultFillStyle": function () { },
      "getDefaultImageStyle": function () { },
      "getDefaultStrokeStyle": function () { },
      "getDefaultStyle": function () { },
      "getDefaultStyleArray": function () { },
      "getDefaultTextStyle": function () { },
      "readFlatCoordinates": function () { },
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "MVT": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "OSMXML": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "OWS": function () { },
    "Polyline": {
      "decodeDeltas": function () { },
      "decodeFloats": function () { },
      "decodeSignedIntegers": function () { },
      "decodeUnsignedIntegers": function () { },
      "encodeDeltas": function () { },
      "encodeFloats": function () { },
      "encodeSignedIntegers": function () { },
      "encodeUnsignedInteger": function () { },
      "encodeUnsignedIntegers": function () { },
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "TextFeature": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "TopoJSON": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "WFS": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { },
      "writeFilter": function () { }
    },
    "WKB": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "WKT": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "WMSCapabilities": function () { },
    "WMSGetFeatureInfo": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "WMTSCapabilities": function () { },
    "XML": function () { },
    "XMLFeature": {
      "transformExtentWithOptions": function () { },
      "transformGeometryWithOptions": function () { }
    },
    "filter": {
      "And": function () { },
      "Bbox": function () { },
      "Comparison": function () { },
      "ComparisonBinary": function () { },
      "Contains": function () { },
      "DWithin": function () { },
      "Disjoint": function () { },
      "During": function () { },
      "EqualTo": function () { },
      "Filter": function () { },
      "GreaterThan": function () { },
      "GreaterThanOrEqualTo": function () { },
      "Intersects": function () { },
      "IsBetween": function () { },
      "IsLike": function () { },
      "IsNull": function () { },
      "LessThan": function () { },
      "LessThanOrEqualTo": function () { },
      "LogicalNary": function () { },
      "Not": function () { },
      "NotEqualTo": function () { },
      "Or": function () { },
      "ResourceId": function () { },
      "Spatial": function () { },
      "Within": function () { },
      "and": function () { },
      "bbox": function () { },
      "between": function () { },
      "contains": function () { },
      "disjoint": function () { },
      "during": function () { },
      "dwithin": function () { },
      "equalTo": function () { },
      "greaterThan": function () { },
      "greaterThanOrEqualTo": function () { },
      "intersects": function () { },
      "isNull": function () { },
      "lessThan": function () { },
      "lessThanOrEqualTo": function () { },
      "like": function () { },
      "not": function () { },
      "notEqualTo": function () { },
      "or": function () { },
      "resourceId": function () { },
      "within": function () { }
    },
    "xlink": {
      "readHref": function () { }
    },
    "xsd": {
      "readBoolean": function () { },
      "readBooleanString": function () { },
      "readDateTime": function () { },
      "readDecimal": function () { },
      "readDecimalString": function () { },
      "readNonNegativeIntegerString": function () { },
      "readPositiveInteger": function () { },
      "readString": function () { },
      "writeBooleanTextNode": function () { },
      "writeCDATASection": function () { },
      "writeDateTimeTextNode": function () { },
      "writeDecimalTextNode": function () { },
      "writeNonNegativeIntegerTextNode": function () { },
      "writeStringTextNode": function () { }
    }
  },
  "functions": {
    "FALSE": function () { },
    "TRUE": function () { },
    "VOID": function () { },
    "memoizeOne": function () { },
    "toPromise": function () { }
  },
  "geohash": {
    "base32": {},
    "fromLonLat": function () { },
    "getAdjacent": function () { },
    "getExtent": function () { },
    "getNeighbours": function () { },
    "toLonLat": function () { }
  },
  "geom": {
    "Circle": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "GPAltiCode": function () { },
    "Geometry": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "GeometryCollection": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "LineString": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "LinearRing": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "MultiLineString": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "MultiPoint": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "MultiPolygon": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "Point": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "Polygon": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "circular": function () { },
      "fromCircle": function () { },
      "fromExtent": function () { },
      "getStrideForLayout": function () { },
      "makeRegular": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "SimpleGeometry": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getStrideForLayout": function () { },
      "transformGeom2D": function () { },
      "unByKey": function () { }
    },
    "createFromType": function () { },
    "flat": {
      "area": {
        "linearRing": function () { },
        "linearRings": function () { },
        "linearRingss": function () { }
      },
      "center": {
        "linearRingss": function () { }
      },
      "closest": {
        "arrayMaxSquaredDelta": function () { },
        "assignClosestArrayPoint": function () { },
        "assignClosestMultiArrayPoint": function () { },
        "assignClosestPoint": function () { },
        "maxSquaredDelta": function () { },
        "multiArrayMaxSquaredDelta": function () { }
      },
      "contains": {
        "linearRingContainsExtent": function () { },
        "linearRingContainsXY": function () { },
        "linearRingsContainsXY": function () { },
        "linearRingssContainsXY": function () { }
      },
      "deflate": {
        "deflateCoordinate": function () { },
        "deflateCoordinates": function () { },
        "deflateCoordinatesArray": function () { },
        "deflateMultiCoordinatesArray": function () { }
      },
      "flip": {
        "flipXY": function () { }
      },
      "geodesic": {
        "greatCircleArc": function () { },
        "meridian": function () { },
        "parallel": function () { }
      },
      "inflate": {
        "inflateCoordinates": function () { },
        "inflateCoordinatesArray": function () { },
        "inflateMultiCoordinatesArray": function () { }
      },
      "interiorpoint": {
        "getInteriorPointOfArray": function () { },
        "getInteriorPointsOfMultiArray": function () { }
      },
      "interpolate": {
        "interpolatePoint": function () { },
        "lineStringCoordinateAtM": function () { },
        "lineStringsCoordinateAtM": function () { }
      },
      "intersectsextent": {
        "intersectsLineString": function () { },
        "intersectsLineStringArray": function () { },
        "intersectsLinearRing": function () { },
        "intersectsLinearRingArray": function () { },
        "intersectsLinearRingMultiArray": function () { }
      },
      "length": {
        "lineStringLength": function () { },
        "linearRingLength": function () { }
      },
      "orient": {
        "inflateEnds": function () { },
        "linearRingIsClockwise": function () { },
        "linearRingsAreOriented": function () { },
        "linearRingssAreOriented": function () { },
        "orientLinearRings": function () { },
        "orientLinearRingsArray": function () { }
      },
      "reverse": {
        "coordinates": function () { }
      },
      "segments": {
        "forEach": function () { }
      },
      "simplify": {
        "douglasPeucker": function () { },
        "douglasPeuckerArray": function () { },
        "douglasPeuckerMultiArray": function () { },
        "quantize": function () { },
        "quantizeArray": function () { },
        "quantizeMultiArray": function () { },
        "radialDistance": function () { },
        "simplifyLineString": function () { },
        "snap": function () { }
      },
      "straightchunk": {
        "matchingChunk": function () { }
      },
      "textpath": {
        "drawTextOnPath": function () { }
      },
      "topology": {
        "lineStringIsClosed": function () { }
      },
      "transform": {
        "rotate": function () { },
        "scale": function () { },
        "transform2D": function () { },
        "translate": function () { }
      }
    }
  },
  "graph": {
    "Dijskra": function () { }
  },
  "has": {
    "DEVICE_PIXEL_RATIO": {},
    "FIREFOX": {},
    "IMAGE_DECODE": function () { },
    "MAC": {},
    "PASSIVE_EVENT_LISTENERS": {},
    "SAFARI": {},
    "SAFARI_BUG_237906": {},
    "WEBKIT": {},
    "WORKER_OFFSCREEN_CANVAS": {}
  },
  "inherits": function () { },
  "interaction": {
    "Blob": function () { },
    "CenterTouch": function () { },
    "Clip": function () { },
    "ClipMap": function () { },
    "CopyPaste": function () { },
    "CurrentMap": function () { },
    "Delete": function () { },
    "DoubleClickZoom": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "DragAndDrop": {
      "DragAndDropEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "DragBox": {
      "DragBoxEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "DragOverlay": function () { },
    "DragPan": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "DragRotate": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "DragRotateAndZoom": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "DragZoom": {
      "DragBoxEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "Draw": {
      "DrawEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "createBox": function () { },
      "createRegularPolygon": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "DrawHole": function () { },
    "DrawRegular": function () { },
    "DrawTouch": function () { },
    "DropFile": function () { },
    "Extent": {
      "ExtentEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "FillAttribute": function () { },
    "Flashlight": function () { },
    "FocusMap": function () { },
    "GeolocationDraw": function () { },
    "Hover": function () { },
    "Interaction": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "KeyboardPan": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "KeyboardZoom": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "LongTouch": function () { },
    "Modify": {
      "ModifyEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "ModifyFeature": function () { },
    "ModifyTouch": function () { },
    "MouseWheelZoom": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "Offset": function () { },
    "PinchRotate": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "PinchZoom": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "Pointer": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "Ripple": function () { },
    "Select": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "SelectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "SelectCluster": function () { },
    "Snap": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "SnapGuides": function () { },
    "SnapLayerPixel": function () { },
    "Split": function () { },
    "Splitter": function () { },
    "Synchronize": function () { },
    "TinkerBell": function () { },
    "TouchCompass": function () { },
    "TouchCursor": function () { },
    "TouchCursorDraw": function () { },
    "TouchCursorModify": function () { },
    "TouchCursorSelect": function () { },
    "Transform": function () { },
    "Translate": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TranslateEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "centroid": function () { },
      "pan": function () { },
      "unByKey": function () { },
      "zoomByDelta": function () { }
    },
    "UndoRedo": function () { },
    "defaults": function () { }
  },
  "layer": {
    "AnimatedCluster": function () { },
    "Base": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "BaseImage": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "BaseTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "BaseVector": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "GeoImage": function () { },
    "Geoportail": {
      "capabilities": {
        "ADMINEXPRESS-COG-CARTO.LATEST": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "CADASTRALPARCELS.PARCELLAIRE_EXPRESS": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "ELEVATION.SLOPES": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "GEOGRAPHICALGRIDSYSTEMS.MAPS": {
          "bbox": {},
          "desc": {},
          "format": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "DITTT": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "GEOGRAPHICALGRIDSYSTEMS.MAPS.BDUNI.J1": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "GEOGRAPHICALGRIDSYSTEMS.MAPS.SCAN-EXPRESS.STANDARD": {
          "bbox": {},
          "desc": {},
          "format": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "GEOGRAPHICALGRIDSYSTEMS.PLANIGNV2": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "GEOGRAPHICALGRIDSYSTEMS.SLOPES.MOUNTAIN": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "ORTHOIMAGERY.ORTHOPHOTOS": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "minZoom": {},
          "originators": {
            "ASTRIUM": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "BOURGOGNE-FRANCHE-COMTE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CG06": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CG45": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_971": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_972": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_974": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_975": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_976": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_977": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_978": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_ALSACE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CNES_AUVERGNE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CRAIG": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "CRCORSE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "DITTT": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "E-MEGALIS": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "FEDER": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "FEDER2": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "FEDER_AUVERGNE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "FEDER_PAYSDELALOIRE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "GRAND_EST": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "HAUTS_DE_FRANCE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "LANGUEDOC-ROUSSILLON": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "MEGALIS-BRETAGNE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "MPM": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "OCCITANIE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "PPIGE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "PREFECTURE_GUADELOUPE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "RGD_SAVOIE": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "SIGLR": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            },
            "e-Megalis": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        },
        "TRANSPORTNETWORKS.ROADS": {
          "bbox": {},
          "desc": {},
          "format": {},
          "key": {},
          "layer": {},
          "maxZoom": {},
          "minZoom": {},
          "originators": {
            "IGN": {
              "attribution": {},
              "constraint": {},
              "href": {},
              "logo": {},
              "maxZoom": {},
              "minZoom": {}
            }
          },
          "queryable": {},
          "server": {},
          "style": {},
          "tilematrix": {},
          "title": {}
        }
      },
      "getCapabilities": function () { },
      "isRegistered": function () { },
      "loadCapabilities": function () { },
      "register": function () { }
    },
    "Graticule": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "Group": {
      "GroupEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Heatmap": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "Image": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "Layer": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "MapboxVector": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "getMapboxPath": function () { },
      "inView": function () { },
      "normalizeGlyphsUrl": function () { },
      "normalizeSourceUrl": function () { },
      "normalizeSpriteUrl": function () { },
      "normalizeStyleUrl": function () { },
      "unByKey": function () { }
    },
    "Maplibre": function () { },
    "SketchOverlay": function () { },
    "Tile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "Vector": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "Vector3D": function () { },
    "VectorImage": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "VectorTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "WebGLPoints": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    },
    "WebGLTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "inView": function () { },
      "unByKey": function () { }
    }
  },
  "legend": {
    "Item": function () { },
    "Legend": {
      "getLegendImage": function () { }
    }
  },
  "loadingstrategy": {
    "all": function () { },
    "bbox": function () { },
    "tile": function () { }
  },
  "math": {
    "ceil": function () { },
    "clamp": function () { },
    "cosh": function () { },
    "floor": function () { },
    "lerp": function () { },
    "log2": function () { },
    "modulo": function () { },
    "round": function () { },
    "solveLinearSystem": function () { },
    "squaredDistance": function () { },
    "squaredSegmentDistance": function () { },
    "toDegrees": function () { },
    "toFixed": function () { },
    "toRadians": function () { }
  },
  "matrix3D": {
    "computeTransformMatrix": function () { },
    "getTransform": function () { },
    "getTransformOrigin": function () { },
    "identity": function () { },
    "inverse": function () { },
    "multiply": function () { },
    "projectVertex": function () { },
    "roundTo": function () { },
    "transformVertex": function () { },
    "translateMatrix": function () { }
  },
  "net": {
    "ClientError": {
      "stackTraceLimit": {}
    },
    "ResponseError": {
      "stackTraceLimit": {}
    },
    "getJSON": function () { },
    "jsonp": function () { },
    "overrideXHR": function () { },
    "resolveUrl": function () { },
    "restoreXHR": function () { }
  },
  "obj": {
    "assign": function () { },
    "clear": function () { },
    "getValues": function () { },
    "isEmpty": function () { }
  },
  "ordering": {
    "yOrdering": function () { },
    "zIndex": function () { }
  },
  "particule": {
    "Base": function () { },
    "Bird": function () { },
    "Cloud": function () { },
    "Rain": function () { },
    "RainDrop": function () { },
    "Snow": function () { }
  },
  "proj": {
    "Projection": function () { },
    "Units": {
      "METERS_PER_UNIT": {
        "degrees": {},
        "ft": {},
        "m": {},
        "radians": {},
        "us-ft": {}
      },
      "fromCode": function () { }
    },
    "addCommon": function () { },
    "addCoordinateTransforms": function () { },
    "addEquivalentProjections": function () { },
    "addEquivalentTransforms": function () { },
    "addProjection": function () { },
    "addProjections": function () { },
    "clearAllProjections": function () { },
    "clearUserProjection": function () { },
    "cloneTransform": function () { },
    "createProjection": function () { },
    "createSafeCoordinateTransform": function () { },
    "createTransformFromCoordinateTransform": function () { },
    "disableCoordinateWarning": function () { },
    "epsg3857": {
      "EXTENT": {},
      "HALF_SIZE": {},
      "MAX_SAFE_Y": {},
      "PROJECTIONS": {},
      "RADIUS": {},
      "WORLD_EXTENT": {},
      "fromEPSG4326": function () { },
      "toEPSG4326": function () { }
    },
    "epsg4326": {
      "EXTENT": {},
      "METERS_PER_UNIT": {},
      "PROJECTIONS": {},
      "RADIUS": {}
    },
    "equivalent": function () { },
    "fromLonLat": function () { },
    "fromUserCoordinate": function () { },
    "fromUserExtent": function () { },
    "fromUserResolution": function () { },
    "get": function () { },
    "getPointResolution": function () { },
    "getTransform": function () { },
    "getTransformFromProjections": function () { },
    "getUserProjection": function () { },
    "identityTransform": function () { },
    "proj4": {
      "register": function () { }
    },
    "projections": {
      "add": function () { },
      "clear": function () { },
      "get": function () { }
    },
    "setUserProjection": function () { },
    "toLonLat": function () { },
    "toUserCoordinate": function () { },
    "toUserExtent": function () { },
    "toUserResolution": function () { },
    "transform": function () { },
    "transformExtent": function () { },
    "transformWithProjections": function () { },
    "transforms": {
      "add": function () { },
      "clear": function () { },
      "get": function () { },
      "remove": function () { }
    },
    "useGeographic": function () { }
  },
  "render": {
    "Box": function () { },
    "Event": {
      "preventDefault": function () { },
      "stopPropagation": function () { }
    },
    "Feature": {
      "toFeature": function () { },
      "toGeometry": function () { }
    },
    "VectorContext": function () { },
    "canvas": {
      "Builder": function () { },
      "BuilderGroup": function () { },
      "Executor": function () { },
      "ExecutorGroup": {
        "getPixelIndexArray": function () { }
      },
      "ImageBuilder": function () { },
      "Immediate": function () { },
      "Instruction": {
        "beginPathInstruction": {},
        "closePathInstruction": {},
        "fillInstruction": {},
        "strokeInstruction": {}
      },
      "LineStringBuilder": function () { },
      "PolygonBuilder": function () { },
      "TextBuilder": function () { },
      "checkedFonts": {
        "A": {},
        "O": {},
        "S": {},
        "T": {},
        "_": {},
        "addChangeListener": function () { },
        "addEventListener": function () { },
        "applyProperties": function () { },
        "changed": function () { },
        "constructor": {
          "ObjectEvent": {
            "preventDefault": function () { },
            "stopPropagation": function () { }
          },
          "unByKey": function () { }
        },
        "dispatchEvent": function () { },
        "dispose": function () { },
        "disposeInternal": function () { },
        "disposed": {},
        "get": function () { },
        "getKeys": function () { },
        "getListeners": function () { },
        "getProperties": function () { },
        "getRevision": function () { },
        "hasListener": function () { },
        "hasProperties": function () { },
        "notify": function () { },
        "ol_uid": {},
        "on": function () { },
        "onInternal": function () { },
        "once": function () { },
        "onceInternal": function () { },
        "removeChangeListener": function () { },
        "removeEventListener": function () { },
        "set": function () { },
        "setProperties": function () { },
        "t": {},
        "un": function () { },
        "unInternal": function () { },
        "unset": function () { }
      },
      "defaultFillStyle": {},
      "defaultFont": {},
      "defaultLineCap": {},
      "defaultLineDash": {},
      "defaultLineDashOffset": {},
      "defaultLineJoin": {},
      "defaultLineWidth": {},
      "defaultMiterLimit": {},
      "defaultPadding": {},
      "defaultStrokeStyle": {},
      "defaultTextAlign": {},
      "defaultTextBaseline": {},
      "drawImageOrLabel": function () { },
      "getTextDimensions": function () { },
      "hitdetect": {
        "HIT_DETECT_RESOLUTION": {},
        "createHitDetectionImageData": function () { },
        "hitDetect": function () { }
      },
      "labelCache": {
        "O": {
          "clear": {}
        },
        "S": {},
        "_": {},
        "addEventListener": function () { },
        "constructor": function () { },
        "dispatchEvent": function () { },
        "dispose": function () { },
        "disposeInternal": function () { },
        "disposed": {},
        "getListeners": function () { },
        "hasListener": function () { },
        "removeEventListener": function () { },
        "setSize": function () { },
        "t": {}
      },
      "measureAndCacheTextWidth": function () { },
      "measureTextHeight": function () { },
      "measureTextWidth": function () { },
      "registerFont": function () { },
      "rotateAtOffset": function () { },
      "textHeights": {}
    },
    "getRenderPixel": function () { },
    "getVectorContext": function () { },
    "toContext": function () { }
  },
  "render3D": function () { },
  "renderer": {
    "Composite": function () { },
    "Layer": {
      "unByKey": function () { }
    },
    "Map": function () { },
    "canvas": {
      "ImageLayer": {
        "unByKey": function () { }
      },
      "Layer": {
        "unByKey": function () { }
      },
      "TileLayer": {
        "unByKey": function () { }
      },
      "VectorImageLayer": {
        "unByKey": function () { }
      },
      "VectorLayer": {
        "unByKey": function () { }
      },
      "VectorTileLayer": {
        "unByKey": function () { }
      },
      "common": {
        "IMAGE_SMOOTHING_DISABLED": {
          "imageSmoothingEnabled": {},
          "msImageSmoothingEnabled": {}
        },
        "IMAGE_SMOOTHING_ENABLED": {
          "imageSmoothingEnabled": {},
          "msImageSmoothingEnabled": {}
        }
      }
    },
    "vector": {
      "defaultOrder": function () { },
      "getSquaredTolerance": function () { },
      "getTolerance": function () { },
      "renderFeature": function () { }
    },
    "webgl": {
      "Layer": {
        "colorDecodeId": function () { },
        "colorEncodeId": function () { },
        "getBlankImageData": function () { },
        "unByKey": function () { },
        "writePointFeatureToBuffers": function () { }
      },
      "PointsLayer": {
        "colorDecodeId": function () { },
        "colorEncodeId": function () { },
        "getBlankImageData": function () { },
        "unByKey": function () { },
        "writePointFeatureToBuffers": function () { }
      },
      "TileLayer": {
        "Attributes": {
          "TEXTURE_COORD": {}
        },
        "Uniforms": {
          "DEPTH": {},
          "RENDER_EXTENT": {},
          "RESOLUTION": {},
          "TEXTURE_ORIGIN_X": {},
          "TEXTURE_ORIGIN_Y": {},
          "TEXTURE_PIXEL_HEIGHT": {},
          "TEXTURE_PIXEL_WIDTH": {},
          "TEXTURE_RESOLUTION": {},
          "TILE_TEXTURE_ARRAY": {},
          "TILE_TRANSFORM": {},
          "TRANSITION_ALPHA": {},
          "ZOOM": {}
        },
        "colorDecodeId": function () { },
        "colorEncodeId": function () { },
        "getBlankImageData": function () { },
        "unByKey": function () { },
        "writePointFeatureToBuffers": function () { }
      }
    }
  },
  "reproj": {
    "Image": function () { },
    "Tile": function () { },
    "Triangulation": function () { },
    "calculateSourceExtentResolution": function () { },
    "calculateSourceResolution": function () { },
    "common": {
      "ENABLE_RASTER_REPROJECTION": {},
      "ERROR_THRESHOLD": {}
    },
    "render": function () { }
  },
  "resolutionconstraint": {
    "createMinMaxResolution": function () { },
    "createSnapToPower": function () { },
    "createSnapToResolutions": function () { }
  },
  "rotationconstraint": {
    "createSnapToN": function () { },
    "createSnapToZero": function () { },
    "disable": function () { },
    "none": function () { }
  },
  "size": {
    "buffer": function () { },
    "hasArea": function () { },
    "scale": function () { },
    "toSize": function () { }
  },
  "source": {
    "BinBase": function () { },
    "BingMaps": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "quadKey": function () { },
      "unByKey": function () { }
    },
    "CartoDB": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Cluster": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "VectorSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "DBPedia": function () { },
    "DFCI": function () { },
    "DataTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "DayNight": {
      "getNightLat": function () { }
    },
    "Delaunay": function () { },
    "FeatureBin": function () { },
    "GeoImage": function () { },
    "GeoRSS": function () { },
    "GeoTIFF": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Geoportail": {
      "tileLoadFunctionWithAuthentication": function () { }
    },
    "GridBin": function () { },
    "HexBin": function () { },
    "IDW": function () { },
    "IIIF": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Image": {
      "ImageSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultImageLoadFunction": function () { },
      "unByKey": function () { }
    },
    "ImageArcGISRest": {
      "ImageSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultImageLoadFunction": function () { },
      "unByKey": function () { }
    },
    "ImageCanvas": {
      "ImageSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultImageLoadFunction": function () { },
      "unByKey": function () { }
    },
    "ImageMapGuide": {
      "ImageSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultImageLoadFunction": function () { },
      "unByKey": function () { }
    },
    "ImageStatic": {
      "ImageSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultImageLoadFunction": function () { },
      "unByKey": function () { }
    },
    "ImageWMS": {
      "ImageSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultImageLoadFunction": function () { },
      "unByKey": function () { }
    },
    "InseeBin": function () { },
    "Mapillary": function () { },
    "OGCMapTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "OGCVectorTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultLoadFunction": function () { },
      "unByKey": function () { }
    },
    "OSM": {
      "ATTRIBUTION": {},
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "OilPainting": function () { },
    "Overpass": function () { },
    "Raster": {
      "ImageSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "Processor": function () { },
      "RasterSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultImageLoadFunction": function () { },
      "newImageData": function () { },
      "unByKey": function () { }
    },
    "Source": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Stamen": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Tile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "TileArcGISRest": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "TileDebug": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "TileImage": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "TileJSON": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "TileWFS": function () { },
    "TileWMS": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "UTFGrid": {
      "CustomTile": function () { },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "UrlTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Vector": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "VectorSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "VectorTile": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "defaultLoadFunction": function () { },
      "unByKey": function () { }
    },
    "WMTS": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "optionsFromCapabilities": function () { },
      "unByKey": function () { }
    },
    "WikiCommons": function () { },
    "XYZ": {
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "Zoomify": {
      "CustomTile": function () { },
      "ObjectEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "TileSourceEvent": {
        "preventDefault": function () { },
        "stopPropagation": function () { }
      },
      "unByKey": function () { }
    },
    "common": {
      "DEFAULT_WMS_VERSION": {}
    },
    "ogcTileUtil": {
      "getMapTileUrlTemplate": function () { },
      "getTileSetInfo": function () { },
      "getVectorTileUrlTemplate": function () { }
    },
    "sourcesFromTileGrid": function () { }
  },
  "sphere": {
    "DEFAULT_RADIUS": {},
    "computeDestinationPoint": function () { },
    "getArea": function () { },
    "getDistance": function () { },
    "getLength": function () { },
    "getMapScale": function () { },
    "greatCircleBearing": function () { },
    "greatCircleTrack": function () { },
    "offset": function () { },
    "setMapScale": function () { }
  },
  "string": {
    "compareVersions": function () { },
    "padNumber": function () { }
  },
  "structs": {
    "LRUCache": function () { },
    "LinkedList": function () { },
    "PriorityQueue": {
      "DROP": {}
    },
    "RBush": function () { }
  },
  "style": {
    "Chart": {
      "colors": {
        "classic": {},
        "dark": {},
        "neon": {},
        "pale": {},
        "pastel": {}
      }
    },
    "Circle": function () { },
    "Fill": function () { },
    "FillPattern": {
      "addPattern": function () { }
    },
    "FlowLine": function () { },
    "FontSymbol": {
      "addDefs": function () { }
    },
    "Icon": function () { },
    "IconImage": {
      "get": function () { }
    },
    "IconImageCache": {
      "shared": {
        "$t": {},
        "Qt": {},
        "Zt": {},
        "canExpireCache": function () { },
        "clear": function () { },
        "expire": function () { },
        "get": function () { },
        "set": function () { },
        "setSize": function () { }
      }
    },
    "Image": function () { },
    "Photo": function () { },
    "Profile": function () { },
    "RegularShape": function () { },
    "Shadow": function () { },
    "Stroke": function () { },
    "StrokePattern": function () { },
    "Style": {
      "createDefaultStyle": function () { },
      "createEditingStyle": function () { },
      "defaultStyle": function () { },
      "toFunction": function () { }
    },
    "Text": function () { },
    "TextPath": function () { },
    "clearDBPediaStyleCache": function () { },
    "dbPediaStyleFunction": function () { },
    "expressions": {
      "Operators": {
        "!": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "!=": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "%": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "*": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "+": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "-": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "/": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "<": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "<=": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "==": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        ">": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        ">=": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "^": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "abs": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "all": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "any": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "array": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "atan": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "band": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "between": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "case": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "ceil": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "clamp": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "color": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "cos": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "floor": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "get": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "interpolate": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "match": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "palette": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "resolution": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "round": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "sin": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "time": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "var": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        },
        "zoom": {
          "getReturnType": function () { },
          "toGlsl": function () { }
        }
      },
      "PALETTE_TEXTURE_ARRAY": {},
      "arrayToGlsl": function () { },
      "colorToGlsl": function () { },
      "expressionToGlsl": function () { },
      "getStringNumberEquivalent": function () { },
      "getValueType": function () { },
      "isTypeUnique": function () { },
      "numberToGlsl": function () { },
      "stringToGlsl": function () { },
      "uniformNameForVariable": function () { }
    },
    "geoportailStyle": {
      "clcColors": {
        "111": {
          "color": {},
          "title": {}
        },
        "112": {
          "color": {},
          "title": {}
        },
        "121": {
          "color": {},
          "title": {}
        },
        "122": {
          "color": {},
          "title": {}
        },
        "123": {
          "color": {},
          "title": {}
        },
        "124": {
          "color": {},
          "title": {}
        },
        "131": {
          "color": {},
          "title": {}
        },
        "132": {
          "color": {},
          "title": {}
        },
        "133": {
          "color": {},
          "title": {}
        },
        "141": {
          "color": {},
          "title": {}
        },
        "142": {
          "color": {},
          "title": {}
        },
        "211": {
          "color": {},
          "title": {}
        },
        "212": {
          "color": {},
          "title": {}
        },
        "213": {
          "color": {},
          "title": {}
        },
        "221": {
          "color": {},
          "title": {}
        },
        "222": {
          "color": {},
          "title": {}
        },
        "223": {
          "color": {},
          "title": {}
        },
        "231": {
          "color": {},
          "title": {}
        },
        "241": {
          "color": {},
          "title": {}
        },
        "242": {
          "color": {},
          "title": {}
        },
        "243": {
          "color": {},
          "title": {}
        },
        "244": {
          "color": {},
          "title": {}
        },
        "311": {
          "color": {},
          "title": {}
        },
        "312": {
          "color": {},
          "title": {}
        },
        "313": {
          "color": {},
          "title": {}
        },
        "321": {
          "color": {},
          "title": {}
        },
        "322": {
          "color": {},
          "title": {}
        },
        "323": {
          "color": {},
          "title": {}
        },
        "324": {
          "color": {},
          "title": {}
        },
        "331": {
          "color": {},
          "title": {}
        },
        "332": {
          "color": {},
          "title": {}
        },
        "333": {
          "color": {},
          "title": {}
        },
        "334": {
          "color": {},
          "title": {}
        },
        "335": {
          "color": {},
          "title": {}
        },
        "411": {
          "color": {},
          "title": {}
        },
        "412": {
          "color": {},
          "title": {}
        },
        "421": {
          "color": {},
          "title": {}
        },
        "422": {
          "color": {},
          "title": {}
        },
        "423": {
          "color": {},
          "title": {}
        },
        "511": {
          "color": {},
          "title": {}
        },
        "512": {
          "color": {},
          "title": {}
        },
        "521": {
          "color": {},
          "title": {}
        },
        "522": {
          "color": {},
          "title": {}
        },
        "523": {
          "color": {},
          "title": {}
        }
      }
    }
  },
  "tilecoord": {
    "createOrUpdate": function () { },
    "fromKey": function () { },
    "getCacheKeyForTileKey": function () { },
    "getKey": function () { },
    "getKeyZXY": function () { },
    "hash": function () { },
    "withinExtentAndZ": function () { }
  },
  "tilegrid": {
    "TileGrid": function () { },
    "WMTS": {
      "createFromCapabilitiesMatrixSet": function () { }
    },
    "common": {
      "DEFAULT_MAX_ZOOM": {},
      "DEFAULT_TILE_SIZE": {}
    },
    "createForExtent": function () { },
    "createForProjection": function () { },
    "createXYZ": function () { },
    "extentFromProjection": function () { },
    "getForProjection": function () { },
    "wrapX": function () { }
  },
  "tileurlfunction": {
    "createFromTemplate": function () { },
    "createFromTemplates": function () { },
    "createFromTileUrlFunctions": function () { },
    "expandUrl": function () { },
    "nullTileUrlFunction": function () { }
  },
  "transform": {
    "apply": function () { },
    "compose": function () { },
    "composeCssTransform": function () { },
    "create": function () { },
    "determinant": function () { },
    "invert": function () { },
    "makeInverse": function () { },
    "makeScale": function () { },
    "multiply": function () { },
    "reset": function () { },
    "rotate": function () { },
    "scale": function () { },
    "set": function () { },
    "setFromArray": function () { },
    "toString": function () { },
    "translate": function () { }
  },
  "uri": {
    "appendParams": function () { }
  },
  "util": {
    "VERSION": {},
    "abstract": function () { },
    "getUid": function () { }
  },
  "vec": {
    "mat4": {
      "create": function () { },
      "fromTransform": function () { }
    }
  },
  "webgl": {
    "ARRAY_BUFFER": {},
    "Buffer": {
      "getArrayClassForType": function () { }
    },
    "DYNAMIC_DRAW": {},
    "ELEMENT_ARRAY_BUFFER": {},
    "FLOAT": {},
    "Helper": {
      "computeAttributesStride": function () { }
    },
    "PaletteTexture": function () { },
    "PostProcessingPass": function () { },
    "RenderTarget": function () { },
    "STATIC_DRAW": {},
    "STREAM_DRAW": {},
    "ShaderBuilder": {
      "ShaderBuilder": function () { },
      "parseLiteralStyle": function () { }
    },
    "TileTexture": function () { },
    "UNSIGNED_BYTE": {},
    "UNSIGNED_INT": {},
    "UNSIGNED_SHORT": {},
    "getContext": function () { },
    "getSupportedExtensions": function () { }
  },
  "xml": {
    "Gw": function () { },
    "OBJECT_PROPERTY_NODE_FACTORY": function () { },
    "XML_SCHEMA_INSTANCE_URI": {},
    "createElementNS": function () { },
    "getAllTextContent": function () { },
    "getAttributeNS": function () { },
    "getDocument": function () { },
    "getXMLSerializer": function () { },
    "isDocument": function () { },
    "makeArrayExtender": function () { },
    "makeArrayPusher": function () { },
    "makeArraySerializer": function () { },
    "makeChildAppender": function () { },
    "makeObjectPropertyPusher": function () { },
    "makeObjectPropertySetter": function () { },
    "makeReplacer": function () { },
    "makeSequence": function () { },
    "makeSimpleNodeFactory": function () { },
    "makeStructureNS": function () { },
    "parse": function () { },
    "parseNode": function () { },
    "pushParseAndPop": function () { },
    "pushSerializeAndPop": function () { },
    "registerDocument": function () { },
    "registerXMLSerializer": function () { },
    "serialize": function () { }
  }
};
ol.AssertionError.prototype = {
  "constructor": function () { }
};
ol.Collection.prototype = {
  "G": function () { },
  "P": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "extend": function () { },
  "forEach": function () { },
  "get": function () { },
  "getArray": function () { },
  "getKeys": function () { },
  "getLength": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "insertAt": function () { },
  "item": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "pop": function () { },
  "push": function () { },
  "remove": function () { },
  "removeAt": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAt": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.Collection.CollectionEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.Collection.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.DataTile.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "getAlpha": function () { },
  "getData": function () { },
  "getError": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "setState": function () { }
};
ol.Disposable.prototype = {
  "dispose": function () { },
  "disposeInternal": function () { }
};
ol.Feature.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clone": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getGeometry": function () { },
  "getGeometryName": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "it": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rt": function () { },
  "set": function () { },
  "setGeometry": function () { },
  "setGeometryName": function () { },
  "setId": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.Feature.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.Geolocation.prototype = {
  "At": function () { },
  "Ct": function () { },
  "Et": function () { },
  "Tt": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getAccuracy": function () { },
  "getAccuracyGeometry": function () { },
  "getAltitude": function () { },
  "getAltitudeAccuracy": function () { },
  "getHeading": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPosition": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSpeed": function () { },
  "getTracking": function () { },
  "getTrackingOptions": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProjection": function () { },
  "setProperties": function () { },
  "setTracking": function () { },
  "setTrackingOptions": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.Geolocation.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.HexGrid.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "coord2hex": function () { },
  "cube2hex": function () { },
  "cube_distance": function () { },
  "cube_line": function () { },
  "cube_neighbors": function () { },
  "cube_round": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getHexagon": function () { },
  "getHexagonAtCoord": function () { },
  "getKeys": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getOrigin": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSize": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hex2coord": function () { },
  "hex2cube": function () { },
  "hex2offset": function () { },
  "hex_corner": function () { },
  "hex_neighbors": function () { },
  "hex_round": function () { },
  "layout": function () { },
  "neighbors": function () { },
  "notify": function () { },
  "offset2hex": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setLayout": function () { },
  "setOrigin": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.Image.prototype = {
  "Dt": function () { },
  "Gt": function () { },
  "Lt": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getExtent": function () { },
  "getImage": function () { },
  "getListeners": function () { },
  "getPixelRatio": function () { },
  "getResolution": function () { },
  "getState": function () { },
  "hasListener": function () { },
  "load": function () { },
  "removeEventListener": function () { },
  "setImage": function () { }
};
ol.ImageBase.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getExtent": function () { },
  "getImage": function () { },
  "getListeners": function () { },
  "getPixelRatio": function () { },
  "getResolution": function () { },
  "getState": function () { },
  "hasListener": function () { },
  "load": function () { },
  "removeEventListener": function () { }
};
ol.ImageCanvas.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getError": function () { },
  "getExtent": function () { },
  "getImage": function () { },
  "getListeners": function () { },
  "getPixelRatio": function () { },
  "getResolution": function () { },
  "getState": function () { },
  "hasListener": function () { },
  "load": function () { },
  "qt": function () { },
  "removeEventListener": function () { }
};
ol.ImageTile.prototype = {
  "Dt": function () { },
  "Gt": function () { },
  "Lt": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "getAlpha": function () { },
  "getImage": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "setImage": function () { },
  "setState": function () { }
};
ol.InseeGrid.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getExtent": function () { },
  "getGridAtCoordinate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.Kinetic.prototype = {
  "begin": function () { },
  "end": function () { },
  "getAngle": function () { },
  "getDistance": function () { },
  "update": function () { }
};
ol.Map.prototype = {
  "Wi": function () { },
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "addInteraction": function () { },
  "addLayer": function () { },
  "addOverlay": function () { },
  "animExtent": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "br": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "dr": function () { },
  "forEachFeatureAtPixel": function () { },
  "forEachLayerAtPixel": function () { },
  "get": function () { },
  "getAllLayers": function () { },
  "getControls": function () { },
  "getCoordinateFromPixel": function () { },
  "getCoordinateFromPixelInternal": function () { },
  "getEventCoordinate": function () { },
  "getEventCoordinateInternal": function () { },
  "getEventPixel": function () { },
  "getFeaturesAtPixel": function () { },
  "getFilters": function () { },
  "getInteractions": function () { },
  "getKeys": function () { },
  "getLayerGroup": function () { },
  "getLayers": function () { },
  "getListeners": function () { },
  "getLoadingOrNotReady": function () { },
  "getOverlayById": function () { },
  "getOverlayContainer": function () { },
  "getOverlayContainerStopEvent": function () { },
  "getOverlays": function () { },
  "getOwnerDocument": function () { },
  "getPixelFromCoordinate": function () { },
  "getPixelFromCoordinateInternal": function () { },
  "getProperties": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSize": function () { },
  "getTarget": function () { },
  "getTargetElement": function () { },
  "getTilePriority": function () { },
  "getView": function () { },
  "getViewport": function () { },
  "gr": function () { },
  "handleBrowserEvent": function () { },
  "handleMapBrowserEvent": function () { },
  "handlePostRender": function () { },
  "hasFeatureAtPixel": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hideTarget": function () { },
  "hr": function () { },
  "isRendered": function () { },
  "lr": function () { },
  "markup": function () { },
  "mr": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "pr": function () { },
  "pulse": function () { },
  "redrawText": function () { },
  "removeChangeListener": function () { },
  "removeControl": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "removeInteraction": function () { },
  "removeLayer": function () { },
  "removeOverlay": function () { },
  "render": function () { },
  "renderSync": function () { },
  "set": function () { },
  "setLayerGroup": function () { },
  "setLayers": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "setTarget": function () { },
  "setView": function () { },
  "showTarget": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateSize": function () { },
  "vr": function () { },
  "wr": function () { },
  "yr": function () { }
};
ol.Map.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.MapBrowserEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.MapBrowserEventHandler.prototype = {
  "Bn": function () { },
  "Hn": function () { },
  "Jn": function () { },
  "Kn": function () { },
  "Ln": function () { },
  "Un": function () { },
  "Vn": function () { },
  "Wn": function () { },
  "Xn": function () { },
  "addEventListener": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getListeners": function () { },
  "hasListener": function () { },
  "removeEventListener": function () { }
};
ol.MapEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.Object.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.Object.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.Observable.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getListeners": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeEventListener": function () { },
  "unInternal": function () { }
};
ol.Overlay.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getElement": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setElement": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setProperties": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.AnimatedCanvas.prototype = {
  "_animate": function () { },
  "_createParticule": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getElement": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getParticules": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "randomCoord": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setAnimation": function () { },
  "setElement": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setProperties": function () { },
  "setVisible": function () { },
  "testExit": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.Fixed.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getElement": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setElement": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setProperties": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.FixedPopup.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addPopupClass": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClassPositioning": function () { },
  "getElement": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getLinkStyle": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPixelPosition": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removePopupClass": function () { },
  "render": function () { },
  "set": function () { },
  "setClosebox": function () { },
  "setElement": function () { },
  "setLinkStyle": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPixelPosition": function () { },
  "setPopupClass": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setPositioning_": function () { },
  "setProperties": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "setVisible": function () { },
  "show": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.Magnify.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getElement": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMagMap": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onMouseMove_": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setActive": function () { },
  "setElement": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setProperties": function () { },
  "setView_": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.Overlay.Placemark.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addPopupClass": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClassPositioning": function () { },
  "getElement": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removePopupClass": function () { },
  "render": function () { },
  "set": function () { },
  "setBackgroundColor": function () { },
  "setClassName": function () { },
  "setClosebox": function () { },
  "setColor": function () { },
  "setContentColor": function () { },
  "setElement": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPopupClass": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setPositioning_": function () { },
  "setProperties": function () { },
  "setRadius": function () { },
  "setVisible": function () { },
  "show": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.Popup.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addPopupClass": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClassPositioning": function () { },
  "getElement": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removePopupClass": function () { },
  "render": function () { },
  "set": function () { },
  "setClosebox": function () { },
  "setElement": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPopupClass": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setPositioning_": function () { },
  "setProperties": function () { },
  "setVisible": function () { },
  "show": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.PopupFeature.prototype = {
  "_attributeObject": function () { },
  "_getHtml": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addPopupClass": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClassPositioning": function () { },
  "getElement": function () { },
  "getFix": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removePopupClass": function () { },
  "render": function () { },
  "set": function () { },
  "setClosebox": function () { },
  "setElement": function () { },
  "setFix": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPopupClass": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setPositioning_": function () { },
  "setProperties": function () { },
  "setTemplate": function () { },
  "setVisible": function () { },
  "show": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.Overlay.Tooltip.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addPopupClass": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "formatArea": function () { },
  "formatLength": function () { },
  "get": function () { },
  "getClassPositioning": function () { },
  "getElement": function () { },
  "getHTML": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOffset": function () { },
  "getOptions": function () { },
  "getPosition": function () { },
  "getPositioning": function () { },
  "getProperties": function () { },
  "getRect": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "handleElementChanged": function () { },
  "handleMapChanged": function () { },
  "handleOffsetChanged": function () { },
  "handlePositionChanged": function () { },
  "handlePositioningChanged": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "panIntoView": function () { },
  "performAutoPan": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removePopupClass": function () { },
  "render": function () { },
  "set": function () { },
  "setClosebox": function () { },
  "setElement": function () { },
  "setFeature": function () { },
  "setInfo": function () { },
  "setMap": function () { },
  "setOffset": function () { },
  "setPopupClass": function () { },
  "setPosition": function () { },
  "setPositioning": function () { },
  "setPositioning_": function () { },
  "setProperties": function () { },
  "setVisible": function () { },
  "show": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updatePixelPosition": function () { },
  "updateRenderedPosition": function () { }
};
ol.PerspectiveMap.prototype = {
  "Wi": function () { },
  "_animatePerpective": function () { },
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "addInteraction": function () { },
  "addLayer": function () { },
  "addOverlay": function () { },
  "animExtent": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "br": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "dr": function () { },
  "forEachFeatureAtPixel": function () { },
  "forEachLayerAtPixel": function () { },
  "get": function () { },
  "getAllLayers": function () { },
  "getControls": function () { },
  "getCoordinateFromPixel": function () { },
  "getCoordinateFromPixelInternal": function () { },
  "getEventCoordinate": function () { },
  "getEventCoordinateInternal": function () { },
  "getEventPixel": function () { },
  "getFeaturesAtPixel": function () { },
  "getFilters": function () { },
  "getInteractions": function () { },
  "getKeys": function () { },
  "getLayerGroup": function () { },
  "getLayers": function () { },
  "getListeners": function () { },
  "getLoadingOrNotReady": function () { },
  "getMatrix3D": function () { },
  "getOverlayById": function () { },
  "getOverlayContainer": function () { },
  "getOverlayContainerStopEvent": function () { },
  "getOverlays": function () { },
  "getOwnerDocument": function () { },
  "getPixelFromCoordinate": function () { },
  "getPixelFromCoordinateInternal": function () { },
  "getPixelFromPixelScreen": function () { },
  "getPixelRatio": function () { },
  "getPixelScreenFromCoordinate": function () { },
  "getProperties": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSize": function () { },
  "getTarget": function () { },
  "getTargetElement": function () { },
  "getTilePriority": function () { },
  "getView": function () { },
  "getViewport": function () { },
  "gr": function () { },
  "handleBrowserEvent": function () { },
  "handleMapBrowserEvent": function () { },
  "handlePostRender": function () { },
  "hasFeatureAtPixel": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hideTarget": function () { },
  "hr": function () { },
  "isRendered": function () { },
  "lr": function () { },
  "markup": function () { },
  "mr": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "pr": function () { },
  "pulse": function () { },
  "redrawText": function () { },
  "removeChangeListener": function () { },
  "removeControl": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "removeInteraction": function () { },
  "removeLayer": function () { },
  "removeOverlay": function () { },
  "render": function () { },
  "renderSync": function () { },
  "set": function () { },
  "setLayerGroup": function () { },
  "setLayers": function () { },
  "setPerspective": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "setTarget": function () { },
  "setView": function () { },
  "showTarget": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateSize": function () { },
  "vr": function () { },
  "wr": function () { },
  "yr": function () { }
};
ol.PluggableMap.prototype = {
  "Wi": function () { },
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "addInteraction": function () { },
  "addLayer": function () { },
  "addOverlay": function () { },
  "applyProperties": function () { },
  "br": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "dr": function () { },
  "forEachFeatureAtPixel": function () { },
  "forEachLayerAtPixel": function () { },
  "get": function () { },
  "getAllLayers": function () { },
  "getControls": function () { },
  "getCoordinateFromPixel": function () { },
  "getCoordinateFromPixelInternal": function () { },
  "getEventCoordinate": function () { },
  "getEventCoordinateInternal": function () { },
  "getEventPixel": function () { },
  "getFeaturesAtPixel": function () { },
  "getInteractions": function () { },
  "getKeys": function () { },
  "getLayerGroup": function () { },
  "getLayers": function () { },
  "getListeners": function () { },
  "getLoadingOrNotReady": function () { },
  "getOverlayById": function () { },
  "getOverlayContainer": function () { },
  "getOverlayContainerStopEvent": function () { },
  "getOverlays": function () { },
  "getOwnerDocument": function () { },
  "getPixelFromCoordinate": function () { },
  "getPixelFromCoordinateInternal": function () { },
  "getProperties": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSize": function () { },
  "getTarget": function () { },
  "getTargetElement": function () { },
  "getTilePriority": function () { },
  "getView": function () { },
  "getViewport": function () { },
  "gr": function () { },
  "handleBrowserEvent": function () { },
  "handleMapBrowserEvent": function () { },
  "handlePostRender": function () { },
  "hasFeatureAtPixel": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hr": function () { },
  "isRendered": function () { },
  "lr": function () { },
  "mr": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "pr": function () { },
  "redrawText": function () { },
  "removeChangeListener": function () { },
  "removeControl": function () { },
  "removeEventListener": function () { },
  "removeInteraction": function () { },
  "removeLayer": function () { },
  "removeOverlay": function () { },
  "render": function () { },
  "renderSync": function () { },
  "set": function () { },
  "setLayerGroup": function () { },
  "setLayers": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "setTarget": function () { },
  "setView": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateSize": function () { },
  "vr": function () { },
  "wr": function () { },
  "yr": function () { }
};
ol.PluggableMap.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.Tile.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "getAlpha": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "setState": function () { }
};
ol.TileCache.prototype = {
  "canExpireCache": function () { },
  "clear": function () { },
  "constructor": function () { },
  "containsKey": function () { },
  "expireCache": function () { },
  "forEach": function () { },
  "get": function () { },
  "getCount": function () { },
  "getKeys": function () { },
  "getValues": function () { },
  "peekFirstKey": function () { },
  "peekLast": function () { },
  "peekLastKey": function () { },
  "pop": function () { },
  "pruneExceptNewestZ": function () { },
  "remove": function () { },
  "replace": function () { },
  "set": function () { },
  "setSize": function () { }
};
ol.TileQueue.prototype = {
  "clear": function () { },
  "constructor": function () { },
  "dequeue": function () { },
  "ei": function () { },
  "enqueue": function () { },
  "getCount": function () { },
  "getTilesLoading": function () { },
  "handleTileChange": function () { },
  "ii": function () { },
  "isEmpty": function () { },
  "isKeyQueued": function () { },
  "isQueued": function () { },
  "loadMoreTiles": function () { },
  "ni": function () { },
  "oi": function () { },
  "reprioritize": function () { },
  "ri": function () { },
  "si": function () { }
};
ol.TileRange.prototype = {
  "contains": function () { },
  "containsTileRange": function () { },
  "containsXY": function () { },
  "equals": function () { },
  "extend": function () { },
  "getHeight": function () { },
  "getSize": function () { },
  "getWidth": function () { },
  "intersects": function () { }
};
ol.VectorRenderTile.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "getAlpha": function () { },
  "getContext": function () { },
  "getImage": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getReplayState": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasContext": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "setState": function () { }
};
ol.VectorTile.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "getAlpha": function () { },
  "getFeatures": function () { },
  "getFormat": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "onError": function () { },
  "onLoad": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "setFeatures": function () { },
  "setLoader": function () { },
  "setState": function () { }
};
ol.View.prototype = {
  "Ii": function () { },
  "Ni": function () { },
  "Pi": function () { },
  "Ri": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "adjustCenter": function () { },
  "adjustCenterInternal": function () { },
  "adjustResolution": function () { },
  "adjustResolutionInternal": function () { },
  "adjustRotation": function () { },
  "adjustRotationInternal": function () { },
  "adjustZoom": function () { },
  "animate": function () { },
  "animateInternal": function () { },
  "applyProperties": function () { },
  "beginInteraction": function () { },
  "calculateCenterRotate": function () { },
  "calculateCenterShift": function () { },
  "calculateCenterZoom": function () { },
  "calculateExtent": function () { },
  "calculateExtentInternal": function () { },
  "cancelAnimations": function () { },
  "centerOn": function () { },
  "centerOnInternal": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endInteraction": function () { },
  "endInteractionInternal": function () { },
  "fit": function () { },
  "fitInternal": function () { },
  "flyTo": function () { },
  "get": function () { },
  "getAnimating": function () { },
  "getCenter": function () { },
  "getCenterInternal": function () { },
  "getConstrainResolution": function () { },
  "getConstrainedCenter": function () { },
  "getConstrainedResolution": function () { },
  "getConstrainedZoom": function () { },
  "getConstraints": function () { },
  "getHints": function () { },
  "getInteracting": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolution": function () { },
  "getResolutionForExtent": function () { },
  "getResolutionForExtentInternal": function () { },
  "getResolutionForValueFunction": function () { },
  "getResolutionForZoom": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getRotation": function () { },
  "getState": function () { },
  "getValueForResolutionFunction": function () { },
  "getZoom": function () { },
  "getZoomForResolution": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isDef": function () { },
  "ki": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "resolveConstraints": function () { },
  "rotatedExtentForGeometry": function () { },
  "set": function () { },
  "setCenter": function () { },
  "setCenterInternal": function () { },
  "setConstrainResolution": function () { },
  "setHint": function () { },
  "setMaxZoom": function () { },
  "setMinZoom": function () { },
  "setProperties": function () { },
  "setResolution": function () { },
  "setRotation": function () { },
  "setViewportSize": function () { },
  "setZoom": function () { },
  "takeTour": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "zi": function () { }
};
ol.View.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.Attribution.prototype = {
  "Ir": function () { },
  "Nr": function () { },
  "Rr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCollapsed": function () { },
  "getCollapsible": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setCollapsed": function () { },
  "setCollapsible": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "zr": function () { }
};
ol.control.Attribution.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.Bar.prototype = {
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "deactivateControls": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActiveControls": function () { },
  "getControls": function () { },
  "getControlsByName": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onActivateControl_": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Button.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getButtonElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setHtml": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.CanvasAttribution.prototype = {
  "Ir": function () { },
  "Nr": function () { },
  "Rr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawAttribution_": function () { },
  "get": function () { },
  "getCollapsed": function () { },
  "getCollapsible": function () { },
  "getContext": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setCanvas": function () { },
  "setCollapsed": function () { },
  "setCollapsible": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "zr": function () { }
};
ol.control.CanvasBase.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFill": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.CanvasScaleLine.prototype = {
  "Nr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createMarker": function () { },
  "createScaleBar": function () { },
  "createStepText": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawScale_": function () { },
  "get": function () { },
  "getContext": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getScaleForResolution": function () { },
  "getUnits": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "mw": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setDpi": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "setUnits": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.CanvasTitle.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFill": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "getTitle": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.CenterPosition.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFill": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setCanvas": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Compass.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "compactCompass_": function () { },
  "constructor": function () { },
  "defaultCompass_": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFill": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setImage": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Control.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Control.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.Dialog.prototype = {
  "_onButton": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "close": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getContentElement": function () { },
  "getInputs": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "isOpen": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "open": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setContent": function () { },
  "setContentMessage": function () { },
  "setMap": function () { },
  "setProgress": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "show": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Disable.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "disableMap": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isOn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.EditBar.prototype = {
  "_getTitle": function () { },
  "_setDrawPolygon": function () { },
  "_setEditInteraction": function () { },
  "_setModifyInteraction": function () { },
  "_setSelectInteraction": function () { },
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "deactivateControls": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActiveControls": function () { },
  "getControls": function () { },
  "getControlsByName": function () { },
  "getInteraction": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onActivateControl_": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.FullScreen.prototype = {
  "Bm": function () { },
  "Nm": function () { },
  "Rr": function () { },
  "Vm": function () { },
  "Wm": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.FullScreen.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.Gauge.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "val": function () { }
};
ol.control.GeoBookmark.prototype = {
  "addBookmark": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getBookmarks": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeBookmark": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setBookmarks": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.GeolocationBar.prototype = {
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "deactivateControls": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActiveControls": function () { },
  "getControls": function () { },
  "getControlsByName": function () { },
  "getInteraction": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onActivateControl_": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.GeolocationButton.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getButtonElement": function () { },
  "getDisable": function () { },
  "getInteraction": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSubBar": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setActive": function () { },
  "setDisable": function () { },
  "setHtml": function () { },
  "setInteraction": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSubBar": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "setVisible": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Globe.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getGlobe": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setCenter": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setView": function () { },
  "show": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Graticule.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFill": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.GridReference.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFeatureName": function () { },
  "getFill": function () { },
  "getHIndex": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getReference": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "getVIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "indexTitle": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setIndex": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "sortFeatures": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Imageline.prototype = {
  "_drawLink": function () { },
  "_getImage": function () { },
  "_getSources": function () { },
  "_getTitle": function () { },
  "_setScrolling": function () { },
  "_updateScrollBounds": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isCollapsed": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "select": function () { },
  "set": function () { },
  "setLayers": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "useExtent": function () { }
};
ol.control.IsochroneGeoportail.prototype = {
  "_addSearchCtrl": function () { },
  "_error": function () { },
  "_success": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "search": function () { },
  "set": function () { },
  "setDirection": function () { },
  "setMap": function () { },
  "setMethod": function () { },
  "setMode": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.LayerPopup.prototype = {
  "_clearLayerForLI": function () { },
  "_getLayerForLI": function () { },
  "_setLayerForLI": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "displayInLayerSwitcher": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "dragOpacity_": function () { },
  "dragOrdering_": function () { },
  "drawList": function () { },
  "drawPanel": function () { },
  "drawPanel_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getLayerClass": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPanel": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSelection": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "isOpen": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "overflow": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "selectLayer": function () { },
  "set": function () { },
  "setHeader": function () { },
  "setLayerOpacity": function () { },
  "setLayerVisibility": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setprogress_": function () { },
  "show": function () { },
  "switchLayerVisibility": function () { },
  "testLayerVisibility": function () { },
  "tip": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "viewChange": function () { }
};
ol.control.LayerShop.prototype = {
  "_clearLayerForLI": function () { },
  "_getLayerForLI": function () { },
  "_setLayerForLI": function () { },
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "displayInLayerSwitcher": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "dragOpacity_": function () { },
  "dragOrdering_": function () { },
  "drawList": function () { },
  "drawPanel": function () { },
  "drawPanel_": function () { },
  "get": function () { },
  "getBarElement": function () { },
  "getKeys": function () { },
  "getLayerClass": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPanel": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSelection": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "isOpen": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "overflow": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "selectLayer": function () { },
  "set": function () { },
  "setHeader": function () { },
  "setLayerOpacity": function () { },
  "setLayerVisibility": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setprogress_": function () { },
  "show": function () { },
  "switchLayerVisibility": function () { },
  "testLayerVisibility": function () { },
  "tip": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "viewChange": function () { }
};
ol.control.LayerSwitcher.prototype = {
  "_clearLayerForLI": function () { },
  "_getLayerForLI": function () { },
  "_setLayerForLI": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "displayInLayerSwitcher": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "dragOpacity_": function () { },
  "dragOrdering_": function () { },
  "drawList": function () { },
  "drawPanel": function () { },
  "drawPanel_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getLayerClass": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPanel": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSelection": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "isOpen": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "overflow": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "selectLayer": function () { },
  "set": function () { },
  "setHeader": function () { },
  "setLayerOpacity": function () { },
  "setLayerVisibility": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setprogress_": function () { },
  "show": function () { },
  "switchLayerVisibility": function () { },
  "testLayerVisibility": function () { },
  "tip": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "viewChange": function () { }
};
ol.control.LayerSwitcherImage.prototype = {
  "_clearLayerForLI": function () { },
  "_getLayerForLI": function () { },
  "_setLayerForLI": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "displayInLayerSwitcher": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "dragOpacity_": function () { },
  "dragOrdering_": function () { },
  "drawList": function () { },
  "drawPanel": function () { },
  "drawPanel_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getLayerClass": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPanel": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSelection": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "isOpen": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "overflow": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "selectLayer": function () { },
  "set": function () { },
  "setHeader": function () { },
  "setLayerOpacity": function () { },
  "setLayerVisibility": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setprogress_": function () { },
  "show": function () { },
  "switchLayerVisibility": function () { },
  "testLayerVisibility": function () { },
  "tip": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "viewChange": function () { }
};
ol.control.Legend.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFill": function () { },
  "getKeys": function () { },
  "getLegend": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "isCollapsed": function () { },
  "notify": function () { },
  "onCanvas": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setCanvas": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "show": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.MapZone.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addZone": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCollapsed": function () { },
  "getKeys": function () { },
  "getLength": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getMaps": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeZone": function () { },
  "render": function () { },
  "set": function () { },
  "setCollapsed": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.MousePosition.prototype = {
  "Tt": function () { },
  "Ym": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCoordinateFormat": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleMouseMove": function () { },
  "handleMouseOut": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setCoordinateFormat": function () { },
  "setMap": function () { },
  "setProjection": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.MousePosition.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.Notification.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "show": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Overlay.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setClass": function () { },
  "setContent": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "show": function () { },
  "showImage": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Overview.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "calcExtent_": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverviewMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setView": function () { },
  "toggleMap": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.OverviewMap.prototype = {
  "$m": function () { },
  "Rr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "aw": function () { },
  "changed": function () { },
  "constructor": function () { },
  "cw": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "ew": function () { },
  "get": function () { },
  "getCollapsed": function () { },
  "getCollapsible": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverviewMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getRotateWithView": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hw": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "ow": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "rw": function () { },
  "set": function () { },
  "setCollapsed": function () { },
  "setCollapsible": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setRotateWithView": function () { },
  "setTarget": function () { },
  "sw": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "uw": function () { },
  "zr": function () { }
};
ol.control.OverviewMap.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.Permalink.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInitialPosition": function () { },
  "getKeys": function () { },
  "getLayerByLink": function () { },
  "getLink": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getUrlParam": function () { },
  "getUrlParams": function () { },
  "getUrlReplace": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasUrlParam": function () { },
  "layerChange_": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setGeohash": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setUrlParam": function () { },
  "setUrlReplace": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "viewChange_": function () { }
};
ol.control.Print.prototype = {
  "_getCanvas": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "copyMap": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fastPrint": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "print": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "toClipboard": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.PrintDialog.prototype = {
  "_labels": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "formats": function () { },
  "get": function () { },
  "getContentElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getMargin": function () { },
  "getOrientation": function () { },
  "getPage": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getScale": function () { },
  "getSize": function () { },
  "getUserElement": function () { },
  "getrintControl": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "i18n": function () { },
  "isOpen": function () { },
  "marginSize": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "paperSize": function () { },
  "print": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "scales": function () { },
  "set": function () { },
  "setMap": function () { },
  "setMargin": function () { },
  "setOrientation": function () { },
  "setProperties": function () { },
  "setScale": function () { },
  "setSize": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Profil.prototype = {
  "_drawAt": function () { },
  "_drawGraph": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getImage": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSelection": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "info": function () { },
  "isShown": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onMove": function () { },
  "onceInternal": function () { },
  "pointAtTime": function () { },
  "popup": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setGeometry": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "show": function () { },
  "showAt": function () { },
  "showAtTime": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.ProgressBar.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setLabel": function () { },
  "setLayers": function () { },
  "setMap": function () { },
  "setPercent": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Rotate.prototype = {
  "Rr": function () { },
  "Ur": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Rotate.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.RoutingGeoportail.prototype = {
  "_resetArray": function () { },
  "abort": function () { },
  "addButton": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addSearch": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "calculate": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getDistanceString": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getTimeString": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "listRouting": function () { },
  "notify": function () { },
  "onGeometryChange": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeSearch": function () { },
  "render": function () { },
  "requestData": function () { },
  "set": function () { },
  "setMap": function () { },
  "setMethod": function () { },
  "setMode": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Scale.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "formatScale": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getScale": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setScale": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.ScaleLine.prototype = {
  "Nr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createMarker": function () { },
  "createScaleBar": function () { },
  "createStepText": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getScaleForResolution": function () { },
  "getUnits": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "mw": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setDpi": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setUnits": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.ScaleLine.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.Search.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchBAN.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "requestData": function () { },
  "restoreHistory": function () { },
  "reverseData": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchDFCI.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchFeature.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSearchString": function () { },
  "getSource": function () { },
  "getTitle": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchGPS.prototype = {
  "_createForm": function () { },
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchGeoportail.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "requestData": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "searchCommune": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchGeoportailParcelle.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleParcelle": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_listParcelle": function () { },
  "_triggerCustomEvent": function () { },
  "activateParcelle": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "autocompleteParcelle": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "requestData": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "searchCommune": function () { },
  "searchParcelle": function () { },
  "select": function () { },
  "selectCommune": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setParcelle": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchJSON.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "requestData": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchNominatim.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "requestData": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchPhoton.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "requestData": function () { },
  "restoreHistory": function () { },
  "reverseData": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SearchWikipedia.prototype = {
  "_getTitleTxt": function () { },
  "_handleClick": function () { },
  "_handleSelect": function () { },
  "_history": function () { },
  "_triggerCustomEvent": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "ajax": function () { },
  "applyProperties": function () { },
  "autocomplete": function () { },
  "changed": function () { },
  "clearHistory": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawList_": function () { },
  "equalFeatures": function () { },
  "get": function () { },
  "getHistory": function () { },
  "getInputField": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTitle": function () { },
  "handleResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "requestData": function () { },
  "restoreHistory": function () { },
  "reverseGeocode": function () { },
  "saveHistory": function () { },
  "search": function () { },
  "select": function () { },
  "set": function () { },
  "setInput": function () { },
  "setLang": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Select.prototype = {
  "_autocomplete": function () { },
  "_checkCondition": function () { },
  "_drawlist": function () { },
  "_escape": function () { },
  "_getLiCondition": function () { },
  "_selectFeatures": function () { },
  "addChangeListener": function () { },
  "addCondition": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "doSelect": function () { },
  "get": function () { },
  "getConditions": function () { },
  "getConditionsString": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "operationsList": function () { },
  "removeChangeListener": function () { },
  "removeCondition": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setConditions": function () { },
  "setFeatures": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SelectBase.prototype = {
  "_checkCondition": function () { },
  "_escape": function () { },
  "_selectFeatures": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "doSelect": function () { },
  "get": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "operationsList": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setFeatures": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SelectCheck.prototype = {
  "_checkCondition": function () { },
  "_escape": function () { },
  "_selectFeatures": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "doSelect": function () { },
  "get": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "operationsList": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setFeatures": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "setTarget": function () { },
  "setValues": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SelectCondition.prototype = {
  "_checkCondition": function () { },
  "_escape": function () { },
  "_selectFeatures": function () { },
  "addChangeListener": function () { },
  "addCondition": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "doSelect": function () { },
  "get": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "operationsList": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setCondition": function () { },
  "setFeatures": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SelectFulltext.prototype = {
  "_checkCondition": function () { },
  "_escape": function () { },
  "_selectFeatures": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "doSelect": function () { },
  "get": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "operationsList": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setFeatures": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SelectMulti.prototype = {
  "_checkCondition": function () { },
  "_escape": function () { },
  "_selectFeatures": function () { },
  "addChangeListener": function () { },
  "addControl": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "doSelect": function () { },
  "get": function () { },
  "getControls": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "operationsList": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setFeatures": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SelectPopup.prototype = {
  "_checkCondition": function () { },
  "_escape": function () { },
  "_selectFeatures": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "doSelect": function () { },
  "get": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "operationsList": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setFeatures": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "setTarget": function () { },
  "setValues": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Status.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hide": function () { },
  "isShown": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "show": function () { },
  "status": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Storymap.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setChapter": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStory": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Swipe.prototype = {
  "_drawRect": function () { },
  "_transformPt": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addLayer": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRectangle": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isLayer_": function () { },
  "move": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precomposeLeft": function () { },
  "precomposeRight": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeLayer": function () { },
  "removeLayers": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.SwipeMap.prototype = {
  "_clip": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRectangle": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "move": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Target.prototype = {
  "_draw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getContext": function () { },
  "getFill": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStroke": function () { },
  "getStyle": function () { },
  "getTextFill": function () { },
  "getTextFont": function () { },
  "getTextStroke": function () { },
  "getVisible": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTarget": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.TextButton.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getButtonElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setHtml": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "setVisible": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Timeline.prototype = {
  "_drawTime": function () { },
  "_endFeatureDate": function () { },
  "_getDateFromOffset": function () { },
  "_getFeatureDate": function () { },
  "_getHTML": function () { },
  "_getOffsetFromDate": function () { },
  "_getScrollLeft": function () { },
  "_roundTo": function () { },
  "_setScrollLeft": function () { },
  "addButton": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getDate": function () { },
  "getEndDate": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStartDate": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isCollapsed": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "roundDate": function () { },
  "set": function () { },
  "setDate": function () { },
  "setFeatures": function () { },
  "setInterval": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Toggle.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getButtonElement": function () { },
  "getDisable": function () { },
  "getInteraction": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSubBar": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setActive": function () { },
  "setDisable": function () { },
  "setHtml": function () { },
  "setInteraction": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSubBar": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "setVisible": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.VideoRecorder.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "pause": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "resume": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "start": function () { },
  "stop": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.WMSCapabilities.prototype = {
  "_fillForm": function () { },
  "_getFormOptions": function () { },
  "_getParser": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clearForm": function () { },
  "constructor": function () { },
  "createDialog": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "error": function () { },
  "get": function () { },
  "getButtonElement": function () { },
  "getCapabilities": function () { },
  "getDialog": function () { },
  "getKeys": function () { },
  "getLayerFromOptions": function () { },
  "getLayerResolution": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOptionsFromCap": function () { },
  "getProperties": function () { },
  "getRequestParam": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "labels": function () { },
  "loadLayer": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setHtml": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "setVisible": function () { },
  "showCapabilities": function () { },
  "showDialog": function () { },
  "showError": function () { },
  "testUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.WMTSCapabilities.prototype = {
  "_fillForm": function () { },
  "_getFormOptions": function () { },
  "_getParser": function () { },
  "_getTG": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clearForm": function () { },
  "constructor": function () { },
  "createDialog": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "error": function () { },
  "get": function () { },
  "getButtonElement": function () { },
  "getCapabilities": function () { },
  "getDialog": function () { },
  "getKeys": function () { },
  "getLayerFromOptions": function () { },
  "getLayerResolution": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOptionsFromCap": function () { },
  "getProperties": function () { },
  "getRequestParam": function () { },
  "getRevision": function () { },
  "getTileGrid": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "labels": function () { },
  "loadLayer": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setHtml": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "setTitle": function () { },
  "setVisible": function () { },
  "showCapabilities": function () { },
  "showDialog": function () { },
  "showError": function () { },
  "testUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Zoom.prototype = {
  "Rr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "qr": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.Zoom.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.ZoomSlider.prototype = {
  "Aw": function () { },
  "Cw": function () { },
  "Fw": function () { },
  "Iw": function () { },
  "Lw": function () { },
  "Nw": function () { },
  "Pw": function () { },
  "Rw": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "zw": function () { }
};
ol.control.ZoomSlider.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.control.ZoomToExtent.prototype = {
  "Rr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleZoomToExtent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "render": function () { },
  "set": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setTarget": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.control.ZoomToExtent.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.events.Event.prototype = {
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.events.Target.prototype = {
  "addEventListener": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getListeners": function () { },
  "hasListener": function () { },
  "removeEventListener": function () { }
};
ol.ext.Ajax.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "send": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.SVGFilter.prototype = {
  "NS": function () { },
  "_id": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOperation": function () { },
  "applyProperties": function () { },
  "applyTo": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "grayscale": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "luminanceToAlpha": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "remove": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "svg": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.SVGFilter.Laplacian.prototype = {
  "NS": function () { },
  "_id": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOperation": function () { },
  "applyProperties": function () { },
  "applyTo": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "grayscale": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "luminanceToAlpha": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "remove": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "svg": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.SVGFilter.Paper.prototype = {
  "NS": function () { },
  "_id": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOperation": function () { },
  "applyProperties": function () { },
  "applyTo": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "grayscale": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "luminanceToAlpha": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "remove": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setLight": function () { },
  "setProperties": function () { },
  "svg": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.SVGFilter.Prewitt.prototype = {
  "NS": function () { },
  "_id": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOperation": function () { },
  "applyProperties": function () { },
  "applyTo": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "grayscale": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "luminanceToAlpha": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "remove": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "svg": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.SVGFilter.Roberts.prototype = {
  "NS": function () { },
  "_id": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOperation": function () { },
  "applyProperties": function () { },
  "applyTo": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "grayscale": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "luminanceToAlpha": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "remove": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "svg": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.SVGFilter.Sobel.prototype = {
  "NS": function () { },
  "_id": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOperation": function () { },
  "applyProperties": function () { },
  "applyTo": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getId": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "grayscale": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "luminanceToAlpha": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "remove": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "svg": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.SVGOperation.prototype = {
  "NS": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendChild": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "geElement": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getName": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Base.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Checkbox.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isChecked": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Collection.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSelect": function () { },
  "getSelectPosition": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "select": function () { },
  "selectAt": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Color.prototype = {
  "_addCustomColor": function () { },
  "_listenDrag": function () { },
  "_selectPalette": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addPaletteColor": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clearCustomColor": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getColor": function () { },
  "getColorFromID": function () { },
  "getColorID": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTab": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isCollapsed": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setColor": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "showTab": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.List.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.PopupBase.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "collapse": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isCollapsed": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "toggle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Radio.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isChecked": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Range.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMax": function () { },
  "getMin": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "getValue2": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "setValue2": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Size.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Slider.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Switch.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isChecked": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.ext.input.Width.prototype = {
  "_listenDrag": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getInputElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getValue": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Blink.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Bounce.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Drop.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Fade.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.None.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Null.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Path.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Shake.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Show.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Slide.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Teleport.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Throw.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.Zoom.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.ZoomOut.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawGeom_": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.featureAnimation.hiddenStyle.Nt.constructor.prototype = {
  "Sa": function () { },
  "ba": function () { },
  "clone": function () { },
  "constructor": function () { },
  "createRenderOptions": function () { },
  "ga": function () { },
  "getAnchor": function () { },
  "getAngle": function () { },
  "getDisplacement": function () { },
  "getFill": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getPoints": function () { },
  "getRadius": function () { },
  "getRadius2": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getStroke": function () { },
  "ja": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "render": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRadius": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { },
  "xa": function () { }
};
ol.filter.Base.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.CSS.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addToLayer": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFromLayer": function () { },
  "set": function () { },
  "setActive": function () { },
  "setBlend": function () { },
  "setDisplay": function () { },
  "setFilter": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.CanvasFilter.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addSVGFilter": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeSVGFilter": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Clip.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clipPath_": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Colorize.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setColor": function () { },
  "setFilter": function () { },
  "setProperties": function () { },
  "setValue": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Composite.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setOperation": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Crop.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawFeaturePath_": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Fold.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawLine_": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Halftone.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Lego.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPattern": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "img": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setBrick": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Mask.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawFeaturePath_": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Paper.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setLight": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.PencilSketch.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Pointillism.prototype = {
  "_getPixels": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.SVGFilter.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addSVGFilter": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "precompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeSVGFilter": function () { },
  "set": function () { },
  "setActive": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.filter.Texture.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPattern": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setFilter": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.format.EsriJSON.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromObject": function () { },
  "readFeatures": function () { },
  "readFeaturesFromObject": function () { },
  "readGeometry": function () { },
  "readGeometryFromObject": function () { },
  "readProjection": function () { },
  "readProjectionFromObject": function () { },
  "writeFeature": function () { },
  "writeFeatureObject": function () { },
  "writeFeatures": function () { },
  "writeFeaturesObject": function () { },
  "writeGeometry": function () { },
  "writeGeometryObject": function () { }
};
ol.format.Feature.prototype = {
  "adaptOptions": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatures": function () { },
  "readGeometry": function () { },
  "readProjection": function () { },
  "writeFeature": function () { },
  "writeFeatures": function () { },
  "writeGeometry": function () { }
};
ol.format.GML.prototype = {
  "$p": function () { },
  "CURVEMEMBER_PARSERS": function () { },
  "CURVE_PARSERS": function () { },
  "ENVELOPE_PARSERS": function () { },
  "ENVELOPE_SERIALIZERS": function () { },
  "FLAT_LINEAR_RINGS_PARSERS": function () { },
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () { },
  "GEOMETRY_PARSERS": function () { },
  "GEOMETRY_SERIALIZERS": function () { },
  "Jp": function () { },
  "LINESTRINGMEMBER_PARSERS": function () { },
  "LINESTRINGORCURVEMEMBER_SERIALIZERS": function () { },
  "MULTICURVE_PARSERS": function () { },
  "MULTILINESTRING_PARSERS": function () { },
  "MULTIPOINT_PARSERS": function () { },
  "MULTIPOLYGON_PARSERS": function () { },
  "MULTISURFACE_PARSERS": function () { },
  "PATCHES_PARSERS": function () { },
  "POINTMEMBER_PARSERS": function () { },
  "POINTMEMBER_SERIALIZERS": function () { },
  "POLYGONMEMBER_PARSERS": function () { },
  "Qp": function () { },
  "RING_PARSERS": function () { },
  "RING_SERIALIZERS": function () { },
  "SEGMENTS_PARSERS": function () { },
  "SURFACEMEMBER_PARSERS": function () { },
  "SURFACEORPOLYGONMEMBER_SERIALIZERS": function () { },
  "SURFACE_PARSERS": function () { },
  "Zp": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "curveMemberParser": function () { },
  "exteriorParser": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "hy": function () { },
  "interiorParser": function () { },
  "lineStringMemberParser": function () { },
  "ly": function () { },
  "namespace": function () { },
  "ny": function () { },
  "pointMemberParser": function () { },
  "polygonMemberParser": function () { },
  "readCurve": function () { },
  "readEnvelope": function () { },
  "readExtentElement": function () { },
  "readFeature": function () { },
  "readFeatureElement": function () { },
  "readFeatureElementInternal": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readFeaturesInternal": function () { },
  "readFlatCoordinatesFromNode": function () { },
  "readFlatLinearRing": function () { },
  "readFlatPos": function () { },
  "readFlatPosList": function () { },
  "readGeometry": function () { },
  "readGeometryElement": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readGeometryOrExtent": function () { },
  "readLineString": function () { },
  "readLineStringSegment": function () { },
  "readLinearRing": function () { },
  "readMultiCurve": function () { },
  "readMultiLineString": function () { },
  "readMultiPoint": function () { },
  "readMultiPolygon": function () { },
  "readMultiSurface": function () { },
  "readPatch": function () { },
  "readPoint": function () { },
  "readPolygon": function () { },
  "readPolygonPatch": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "readSegment": function () { },
  "readSurface": function () { },
  "surfaceMemberParser": function () { },
  "ty": function () { },
  "uy": function () { },
  "writeCurveOrLineString": function () { },
  "writeEnvelope": function () { },
  "writeFeature": function () { },
  "writeFeatureElement": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryElement": function () { },
  "writeGeometryNode": function () { },
  "writeLineStringOrCurveMember": function () { },
  "writeLinearRing": function () { },
  "writeMultiCurveOrLineString": function () { },
  "writeMultiPoint": function () { },
  "writeMultiSurfaceOrPolygon": function () { },
  "writePoint": function () { },
  "writePointMember": function () { },
  "writeRing": function () { },
  "writeSurfaceOrPolygon": function () { },
  "writeSurfaceOrPolygonMember": function () { }
};
ol.format.GML2.prototype = {
  "$p": function () { },
  "ENVELOPE_SERIALIZERS": function () { },
  "FLAT_LINEAR_RINGS_PARSERS": function () { },
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () { },
  "GEOMETRY_PARSERS": function () { },
  "GEOMETRY_SERIALIZERS": function () { },
  "Hp": function () { },
  "Jp": function () { },
  "Kp": function () { },
  "LINESTRINGMEMBER_PARSERS": function () { },
  "LINESTRINGORCURVEMEMBER_SERIALIZERS": function () { },
  "MULTILINESTRING_PARSERS": function () { },
  "MULTIPOINT_PARSERS": function () { },
  "MULTIPOLYGON_PARSERS": function () { },
  "POINTMEMBER_PARSERS": function () { },
  "POINTMEMBER_SERIALIZERS": function () { },
  "POLYGONMEMBER_PARSERS": function () { },
  "Qp": function () { },
  "RING_PARSERS": function () { },
  "RING_SERIALIZERS": function () { },
  "SURFACEORPOLYGONMEMBER_SERIALIZERS": function () { },
  "Yp": function () { },
  "Zp": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "innerBoundaryIsParser": function () { },
  "lineStringMemberParser": function () { },
  "namespace": function () { },
  "ny": function () { },
  "outerBoundaryIsParser": function () { },
  "pointMemberParser": function () { },
  "polygonMemberParser": function () { },
  "readBox": function () { },
  "readExtentElement": function () { },
  "readFeature": function () { },
  "readFeatureElement": function () { },
  "readFeatureElementInternal": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readFeaturesInternal": function () { },
  "readFlatCoordinates": function () { },
  "readFlatCoordinatesFromNode": function () { },
  "readFlatLinearRing": function () { },
  "readGeometry": function () { },
  "readGeometryElement": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readGeometryOrExtent": function () { },
  "readLineString": function () { },
  "readLinearRing": function () { },
  "readMultiLineString": function () { },
  "readMultiPoint": function () { },
  "readMultiPolygon": function () { },
  "readPoint": function () { },
  "readPolygon": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "ty": function () { },
  "writeCurveOrLineString": function () { },
  "writeEnvelope": function () { },
  "writeFeature": function () { },
  "writeFeatureElement": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryElement": function () { },
  "writeGeometryNode": function () { },
  "writeLineStringOrCurveMember": function () { },
  "writeLinearRing": function () { },
  "writeMultiCurveOrLineString": function () { },
  "writeMultiPoint": function () { },
  "writeMultiSurfaceOrPolygon": function () { },
  "writePoint": function () { },
  "writePointMember": function () { },
  "writeRing": function () { },
  "writeSurfaceOrPolygon": function () { },
  "writeSurfaceOrPolygonMember": function () { }
};
ol.format.GML3.prototype = {
  "$p": function () { },
  "CURVEMEMBER_PARSERS": function () { },
  "CURVE_PARSERS": function () { },
  "ENVELOPE_PARSERS": function () { },
  "ENVELOPE_SERIALIZERS": function () { },
  "FLAT_LINEAR_RINGS_PARSERS": function () { },
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () { },
  "GEOMETRY_PARSERS": function () { },
  "GEOMETRY_SERIALIZERS": function () { },
  "Jp": function () { },
  "LINESTRINGMEMBER_PARSERS": function () { },
  "LINESTRINGORCURVEMEMBER_SERIALIZERS": function () { },
  "MULTICURVE_PARSERS": function () { },
  "MULTILINESTRING_PARSERS": function () { },
  "MULTIPOINT_PARSERS": function () { },
  "MULTIPOLYGON_PARSERS": function () { },
  "MULTISURFACE_PARSERS": function () { },
  "PATCHES_PARSERS": function () { },
  "POINTMEMBER_PARSERS": function () { },
  "POINTMEMBER_SERIALIZERS": function () { },
  "POLYGONMEMBER_PARSERS": function () { },
  "Qp": function () { },
  "RING_PARSERS": function () { },
  "RING_SERIALIZERS": function () { },
  "SEGMENTS_PARSERS": function () { },
  "SURFACEMEMBER_PARSERS": function () { },
  "SURFACEORPOLYGONMEMBER_SERIALIZERS": function () { },
  "SURFACE_PARSERS": function () { },
  "Zp": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "curveMemberParser": function () { },
  "exteriorParser": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "hy": function () { },
  "interiorParser": function () { },
  "lineStringMemberParser": function () { },
  "ly": function () { },
  "namespace": function () { },
  "ny": function () { },
  "pointMemberParser": function () { },
  "polygonMemberParser": function () { },
  "readCurve": function () { },
  "readEnvelope": function () { },
  "readExtentElement": function () { },
  "readFeature": function () { },
  "readFeatureElement": function () { },
  "readFeatureElementInternal": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readFeaturesInternal": function () { },
  "readFlatCoordinatesFromNode": function () { },
  "readFlatLinearRing": function () { },
  "readFlatPos": function () { },
  "readFlatPosList": function () { },
  "readGeometry": function () { },
  "readGeometryElement": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readGeometryOrExtent": function () { },
  "readLineString": function () { },
  "readLineStringSegment": function () { },
  "readLinearRing": function () { },
  "readMultiCurve": function () { },
  "readMultiLineString": function () { },
  "readMultiPoint": function () { },
  "readMultiPolygon": function () { },
  "readMultiSurface": function () { },
  "readPatch": function () { },
  "readPoint": function () { },
  "readPolygon": function () { },
  "readPolygonPatch": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "readSegment": function () { },
  "readSurface": function () { },
  "surfaceMemberParser": function () { },
  "ty": function () { },
  "uy": function () { },
  "writeCurveOrLineString": function () { },
  "writeEnvelope": function () { },
  "writeFeature": function () { },
  "writeFeatureElement": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryElement": function () { },
  "writeGeometryNode": function () { },
  "writeLineStringOrCurveMember": function () { },
  "writeLinearRing": function () { },
  "writeMultiCurveOrLineString": function () { },
  "writeMultiPoint": function () { },
  "writeMultiSurfaceOrPolygon": function () { },
  "writePoint": function () { },
  "writePointMember": function () { },
  "writeRing": function () { },
  "writeSurfaceOrPolygon": function () { },
  "writeSurfaceOrPolygonMember": function () { }
};
ol.format.GML32.prototype = {
  "$p": function () { },
  "CURVEMEMBER_PARSERS": function () { },
  "CURVE_PARSERS": function () { },
  "ENVELOPE_PARSERS": function () { },
  "ENVELOPE_SERIALIZERS": function () { },
  "FLAT_LINEAR_RINGS_PARSERS": function () { },
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () { },
  "GEOMETRY_PARSERS": function () { },
  "GEOMETRY_SERIALIZERS": function () { },
  "Jp": function () { },
  "LINESTRINGMEMBER_PARSERS": function () { },
  "LINESTRINGORCURVEMEMBER_SERIALIZERS": function () { },
  "MULTICURVE_PARSERS": function () { },
  "MULTILINESTRING_PARSERS": function () { },
  "MULTIPOINT_PARSERS": function () { },
  "MULTIPOLYGON_PARSERS": function () { },
  "MULTISURFACE_PARSERS": function () { },
  "PATCHES_PARSERS": function () { },
  "POINTMEMBER_PARSERS": function () { },
  "POINTMEMBER_SERIALIZERS": function () { },
  "POLYGONMEMBER_PARSERS": function () { },
  "Qp": function () { },
  "RING_PARSERS": function () { },
  "RING_SERIALIZERS": function () { },
  "SEGMENTS_PARSERS": function () { },
  "SURFACEMEMBER_PARSERS": function () { },
  "SURFACEORPOLYGONMEMBER_SERIALIZERS": function () { },
  "SURFACE_PARSERS": function () { },
  "Zp": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "curveMemberParser": function () { },
  "exteriorParser": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "hy": function () { },
  "interiorParser": function () { },
  "lineStringMemberParser": function () { },
  "ly": function () { },
  "namespace": function () { },
  "ny": function () { },
  "pointMemberParser": function () { },
  "polygonMemberParser": function () { },
  "readCurve": function () { },
  "readEnvelope": function () { },
  "readExtentElement": function () { },
  "readFeature": function () { },
  "readFeatureElement": function () { },
  "readFeatureElementInternal": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readFeaturesInternal": function () { },
  "readFlatCoordinatesFromNode": function () { },
  "readFlatLinearRing": function () { },
  "readFlatPos": function () { },
  "readFlatPosList": function () { },
  "readGeometry": function () { },
  "readGeometryElement": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readGeometryOrExtent": function () { },
  "readLineString": function () { },
  "readLineStringSegment": function () { },
  "readLinearRing": function () { },
  "readMultiCurve": function () { },
  "readMultiLineString": function () { },
  "readMultiPoint": function () { },
  "readMultiPolygon": function () { },
  "readMultiSurface": function () { },
  "readPatch": function () { },
  "readPoint": function () { },
  "readPolygon": function () { },
  "readPolygonPatch": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "readSegment": function () { },
  "readSurface": function () { },
  "surfaceMemberParser": function () { },
  "ty": function () { },
  "uy": function () { },
  "writeCurveOrLineString": function () { },
  "writeEnvelope": function () { },
  "writeFeature": function () { },
  "writeFeatureElement": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryElement": function () { },
  "writeGeometryNode": function () { },
  "writeLineStringOrCurveMember": function () { },
  "writeLinearRing": function () { },
  "writeMultiCurveOrLineString": function () { },
  "writeMultiPoint": function () { },
  "writeMultiSurfaceOrPolygon": function () { },
  "writePoint": function () { },
  "writePointMember": function () { },
  "writeRing": function () { },
  "writeSurfaceOrPolygon": function () { },
  "writeSurfaceOrPolygonMember": function () { }
};
ol.format.GMLBase.prototype = {
  "FLAT_LINEAR_RINGS_PARSERS": function () { },
  "GEOMETRY_FLAT_COORDINATES_PARSERS": function () { },
  "GEOMETRY_PARSERS": function () { },
  "LINESTRINGMEMBER_PARSERS": function () { },
  "MULTILINESTRING_PARSERS": function () { },
  "MULTIPOINT_PARSERS": function () { },
  "MULTIPOLYGON_PARSERS": function () { },
  "POINTMEMBER_PARSERS": function () { },
  "POLYGONMEMBER_PARSERS": function () { },
  "RING_PARSERS": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "lineStringMemberParser": function () { },
  "namespace": function () { },
  "pointMemberParser": function () { },
  "polygonMemberParser": function () { },
  "readExtentElement": function () { },
  "readFeature": function () { },
  "readFeatureElement": function () { },
  "readFeatureElementInternal": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readFeaturesInternal": function () { },
  "readFlatCoordinatesFromNode": function () { },
  "readFlatLinearRing": function () { },
  "readGeometry": function () { },
  "readGeometryElement": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readGeometryOrExtent": function () { },
  "readLineString": function () { },
  "readLinearRing": function () { },
  "readMultiLineString": function () { },
  "readMultiPoint": function () { },
  "readMultiPolygon": function () { },
  "readPoint": function () { },
  "readPolygon": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "writeFeature": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryNode": function () { }
};
ol.format.GPX.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "py": function () { },
  "readFeature": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readGeometry": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "writeFeature": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryNode": function () { }
};
ol.format.GeoJSON.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromObject": function () { },
  "readFeatures": function () { },
  "readFeaturesFromObject": function () { },
  "readGeometry": function () { },
  "readGeometryFromObject": function () { },
  "readProjection": function () { },
  "readProjectionFromObject": function () { },
  "writeFeature": function () { },
  "writeFeatureObject": function () { },
  "writeFeatures": function () { },
  "writeFeaturesObject": function () { },
  "writeGeometry": function () { },
  "writeGeometryObject": function () { }
};
ol.format.GeoJSONP.prototype = {
  "_radix": function () { },
  "_size": function () { },
  "_toType": function () { },
  "_type": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "decodeCoordinates": function () { },
  "decodeNumber": function () { },
  "encodeCoordinates": function () { },
  "encodeNumber": function () { },
  "getLayout": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromObject": function () { },
  "readFeatures": function () { },
  "readFeaturesFromObject": function () { },
  "readGeometry": function () { },
  "readGeometryFromObject": function () { },
  "readProjection": function () { },
  "readProjectionFromObject": function () { },
  "setLayout": function () { },
  "writeFeature": function () { },
  "writeFeatureObject": function () { },
  "writeFeatures": function () { },
  "writeFeaturesObject": function () { },
  "writeGeometry": function () { },
  "writeGeometryObject": function () { }
};
ol.format.GeoJSONX.prototype = {
  "_radix": function () { },
  "_size": function () { },
  "_toType": function () { },
  "_type": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "decodeCoordinates": function () { },
  "decodeNumber": function () { },
  "encodeCoordinates": function () { },
  "encodeNumber": function () { },
  "getLayout": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromObject": function () { },
  "readFeatures": function () { },
  "readFeaturesFromObject": function () { },
  "readGeometry": function () { },
  "readGeometryFromObject": function () { },
  "readProjection": function () { },
  "readProjectionFromObject": function () { },
  "setLayout": function () { },
  "writeFeature": function () { },
  "writeFeatureObject": function () { },
  "writeFeatures": function () { },
  "writeFeaturesObject": function () { },
  "writeGeometry": function () { },
  "writeGeometryObject": function () { }
};
ol.format.GeoRSS.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getDocumentItemsTagName": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "readFeature": function () { },
  "readFeatures": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.format.IGC.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromText": function () { },
  "readFeatures": function () { },
  "readFeaturesFromText": function () { },
  "readGeometry": function () { },
  "readGeometryFromText": function () { },
  "readProjection": function () { },
  "readProjectionFromText": function () { },
  "writeFeature": function () { },
  "writeFeatureText": function () { },
  "writeFeatures": function () { },
  "writeFeaturesText": function () { },
  "writeGeometry": function () { },
  "writeGeometryText": function () { }
};
ol.format.IIIFInfo.prototype = {
  "getComplianceLevelEntryFromProfile": function () { },
  "getComplianceLevelFromProfile": function () { },
  "getComplianceLevelSupportedFeatures": function () { },
  "getImageApiVersion": function () { },
  "getTileSourceOptions": function () { },
  "setImageInfo": function () { }
};
ol.format.JSONFeature.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromObject": function () { },
  "readFeatures": function () { },
  "readFeaturesFromObject": function () { },
  "readGeometry": function () { },
  "readGeometryFromObject": function () { },
  "readProjection": function () { },
  "readProjectionFromObject": function () { },
  "writeFeature": function () { },
  "writeFeatureObject": function () { },
  "writeFeatures": function () { },
  "writeFeaturesObject": function () { },
  "writeGeometry": function () { },
  "writeGeometryObject": function () { }
};
ol.format.KML.prototype = {
  "Ey": function () { },
  "Oy": function () { },
  "Ty": function () { },
  "_y": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readGeometry": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readName": function () { },
  "readNameFromDocument": function () { },
  "readNameFromNode": function () { },
  "readNetworkLinks": function () { },
  "readNetworkLinksFromDocument": function () { },
  "readNetworkLinksFromNode": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "readRegion": function () { },
  "readRegionFromDocument": function () { },
  "readRegionFromNode": function () { },
  "writeFeature": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryNode": function () { }
};
ol.format.MVT.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "iv": function () { },
  "readFeature": function () { },
  "readFeatures": function () { },
  "readGeometry": function () { },
  "readProjection": function () { },
  "rv": function () { },
  "setLayers": function () { },
  "writeFeature": function () { },
  "writeFeatures": function () { },
  "writeGeometry": function () { }
};
ol.format.OSMXML.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readGeometry": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "writeFeature": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryNode": function () { }
};
ol.format.OWS.prototype = {
  "constructor": function () { },
  "read": function () { },
  "readFromDocument": function () { },
  "readFromNode": function () { }
};
ol.format.Polyline.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromText": function () { },
  "readFeatures": function () { },
  "readFeaturesFromText": function () { },
  "readGeometry": function () { },
  "readGeometryFromText": function () { },
  "readProjection": function () { },
  "readProjectionFromText": function () { },
  "writeFeature": function () { },
  "writeFeatureText": function () { },
  "writeFeatures": function () { },
  "writeFeaturesText": function () { },
  "writeGeometry": function () { },
  "writeGeometryText": function () { }
};
ol.format.TextFeature.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromText": function () { },
  "readFeatures": function () { },
  "readFeaturesFromText": function () { },
  "readGeometry": function () { },
  "readGeometryFromText": function () { },
  "readProjection": function () { },
  "readProjectionFromText": function () { },
  "writeFeature": function () { },
  "writeFeatureText": function () { },
  "writeFeatures": function () { },
  "writeFeaturesText": function () { },
  "writeGeometry": function () { },
  "writeGeometryText": function () { }
};
ol.format.TopoJSON.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromObject": function () { },
  "readFeatures": function () { },
  "readFeaturesFromObject": function () { },
  "readGeometry": function () { },
  "readGeometryFromObject": function () { },
  "readProjection": function () { },
  "readProjectionFromObject": function () { },
  "writeFeature": function () { },
  "writeFeatureObject": function () { },
  "writeFeatures": function () { },
  "writeFeaturesObject": function () { },
  "writeGeometry": function () { },
  "writeGeometryObject": function () { }
};
ol.format.WFS.prototype = {
  "adaptOptions": function () { },
  "combineBboxAndFilter": function () { },
  "constructor": function () { },
  "getFeatureType": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureCollectionMetadata": function () { },
  "readFeatureCollectionMetadataFromDocument": function () { },
  "readFeatureCollectionMetadataFromNode": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readGeometry": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "readTransactionResponse": function () { },
  "readTransactionResponseFromDocument": function () { },
  "readTransactionResponseFromNode": function () { },
  "setFeatureType": function () { },
  "writeFeature": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryNode": function () { },
  "writeGetFeature": function () { },
  "writeTransaction": function () { }
};
ol.format.WKB.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatures": function () { },
  "readGeometry": function () { },
  "readProjection": function () { },
  "writeFeature": function () { },
  "writeFeatures": function () { },
  "writeGeometry": function () { }
};
ol.format.WKT.prototype = {
  "Am": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromText": function () { },
  "readFeatures": function () { },
  "readFeaturesFromText": function () { },
  "readGeometry": function () { },
  "readGeometryFromText": function () { },
  "readProjection": function () { },
  "readProjectionFromText": function () { },
  "writeFeature": function () { },
  "writeFeatureText": function () { },
  "writeFeatures": function () { },
  "writeFeaturesText": function () { },
  "writeGeometry": function () { },
  "writeGeometryText": function () { }
};
ol.format.WMSCapabilities.prototype = {
  "constructor": function () { },
  "read": function () { },
  "readFromDocument": function () { },
  "readFromNode": function () { }
};
ol.format.WMSGetFeatureInfo.prototype = {
  "Cm": function () { },
  "adaptOptions": function () { },
  "constructor": function () { },
  "getLayers": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readGeometry": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "setLayers": function () { },
  "writeFeature": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryNode": function () { }
};
ol.format.WMTSCapabilities.prototype = {
  "constructor": function () { },
  "read": function () { },
  "readFromDocument": function () { },
  "readFromNode": function () { }
};
ol.format.XML.prototype = {
  "read": function () { },
  "readFromDocument": function () { },
  "readFromNode": function () { }
};
ol.format.XMLFeature.prototype = {
  "adaptOptions": function () { },
  "constructor": function () { },
  "getReadOptions": function () { },
  "getType": function () { },
  "readFeature": function () { },
  "readFeatureFromDocument": function () { },
  "readFeatureFromNode": function () { },
  "readFeatures": function () { },
  "readFeaturesFromDocument": function () { },
  "readFeaturesFromNode": function () { },
  "readGeometry": function () { },
  "readGeometryFromDocument": function () { },
  "readGeometryFromNode": function () { },
  "readProjection": function () { },
  "readProjectionFromDocument": function () { },
  "readProjectionFromNode": function () { },
  "writeFeature": function () { },
  "writeFeatureNode": function () { },
  "writeFeatures": function () { },
  "writeFeaturesNode": function () { },
  "writeGeometry": function () { },
  "writeGeometryNode": function () { }
};
ol.format.filter.And.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Bbox.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Comparison.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.ComparisonBinary.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Contains.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.DWithin.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Disjoint.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.During.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.EqualTo.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Filter.prototype = {
  "getTagName": function () { }
};
ol.format.filter.GreaterThan.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.GreaterThanOrEqualTo.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Intersects.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.IsBetween.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.IsLike.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.IsNull.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.LessThan.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.LessThanOrEqualTo.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.LogicalNary.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Not.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.NotEqualTo.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Or.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.ResourceId.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Spatial.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.format.filter.Within.prototype = {
  "constructor": function () { },
  "getTagName": function () { }
};
ol.geom.Circle.prototype = {
  "Pv": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCenter": function () { },
  "getClosestPoint": function () { },
  "getCoordinates": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRadius": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersection": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setCenter": function () { },
  "setCenterAndRadius": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "setRadius": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.Circle.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.Geometry.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClosestPoint": function () { },
  "getExtent": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.Geometry.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.GeometryCollection.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "av": function () { },
  "calcCSpline_": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClosestPoint": function () { },
  "getExtent": function () { },
  "getGeometries": function () { },
  "getGeometriesArray": function () { },
  "getGeometriesArrayRecursive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "isEmpty": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setGeometries": function () { },
  "setGeometriesArray": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "uv": function () { }
};
ol.geom.GeometryCollection.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.LineString.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendCoordinate": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "calcCSpline_": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachSegment": function () { },
  "get": function () { },
  "getClosestPoint": function () { },
  "getCoordinateAt": function () { },
  "getCoordinateAtM": function () { },
  "getCoordinates": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getFlatMidpoint": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getLength": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "sampleAt": function () { },
  "scale": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "splitAt": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.LineString.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.LinearRing.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getArea": function () { },
  "getClosestPoint": function () { },
  "getCoordinates": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.LinearRing.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.MultiLineString.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendLineString": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "calcCSpline_": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClosestPoint": function () { },
  "getCoordinateAtM": function () { },
  "getCoordinates": function () { },
  "getEnds": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getFlatMidpoints": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getLineString": function () { },
  "getLineStrings": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "sampleAt": function () { },
  "scale": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.MultiLineString.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.MultiPoint.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendPoint": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClosestPoint": function () { },
  "getCoordinates": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getPoint": function () { },
  "getPoints": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.MultiPoint.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.MultiPolygon.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendPolygon": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "calcCSpline_": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getArea": function () { },
  "getClosestPoint": function () { },
  "getCoordinates": function () { },
  "getEndss": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getFlatInteriorPoints": function () { },
  "getInteriorPoints": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getOrientedFlatCoordinates": function () { },
  "getPolygon": function () { },
  "getPolygons": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "sampleAt": function () { },
  "scale": function () { },
  "scribbleFill": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.MultiPolygon.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.Point.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClosestPoint": function () { },
  "getCoordinates": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.Point.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.Polygon.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendLinearRing": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "calcCSpline_": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getArea": function () { },
  "getClosestPoint": function () { },
  "getCoordinates": function () { },
  "getEnds": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getFlatInteriorPoint": function () { },
  "getInteriorPoint": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getLinearRing": function () { },
  "getLinearRingCount": function () { },
  "getLinearRings": function () { },
  "getListeners": function () { },
  "getOrientedFlatCoordinates": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "sampleAt": function () { },
  "scale": function () { },
  "scribbleFill": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.Polygon.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.geom.SimpleGeometry.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "applyTransform": function () { },
  "changed": function () { },
  "clone": function () { },
  "closestPointXY": function () { },
  "computeExtent": function () { },
  "constructor": function () { },
  "containsXY": function () { },
  "convexHull": function () { },
  "cspline": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getClosestPoint": function () { },
  "getCoordinates": function () { },
  "getExtent": function () { },
  "getFirstCoordinate": function () { },
  "getFlatCoordinates": function () { },
  "getKeys": function () { },
  "getLastCoordinate": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSimplifiedGeometry": function () { },
  "getSimplifiedGeometryInternal": function () { },
  "getStride": function () { },
  "getType": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectsCoordinate": function () { },
  "intersectsExtent": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "rotate": function () { },
  "scale": function () { },
  "set": function () { },
  "setCoordinates": function () { },
  "setFlatCoordinates": function () { },
  "setLayout": function () { },
  "setProperties": function () { },
  "simplify": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { },
  "translate": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.geom.SimpleGeometry.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.graph.Dijskra.prototype = {
  "_resume": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addNode": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "closestCoordinate": function () { },
  "constructor": function () { },
  "direction": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getBestWay": function () { },
  "getEdges": function () { },
  "getKeys": function () { },
  "getLength": function () { },
  "getListeners": function () { },
  "getNode": function () { },
  "getNodeSource": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getRoute": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "path": function () { },
  "pause": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "resume": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "weight": function () { }
};
ol.interaction.Blob.prototype = {
  "Vr": function () { },
  "_calculate": function () { },
  "_getCenter": function () { },
  "_setPosition": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addLayer": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPixelPosition": function () { },
  "getPointerCount": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRadius": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose_": function () { },
  "precompose_": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeLayer": function () { },
  "removeLayers": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPixelPosition": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setRadius": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.CenterTouch.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Clip.prototype = {
  "Vr": function () { },
  "_setPosition": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addLayer": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPixelPosition": function () { },
  "getPointerCount": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRadius": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose_": function () { },
  "precompose_": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeLayer": function () { },
  "removeLayers": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPixelPosition": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setRadius": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.ClipMap.prototype = {
  "Vr": function () { },
  "_clip": function () { },
  "_setPosition": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPixelPosition": function () { },
  "getPointerCount": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRadius": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPixelPosition": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setRadius": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.CopyPaste.prototype = {
  "_currentMap": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "copy": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getCurrentMap": function () { },
  "getDestination": function () { },
  "getFeatures": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isCurrentMap": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "paste": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setCurrentMap": function () { },
  "setDestination": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.CurrentMap.prototype = {
  "_currentMap": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getCurrentMap": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isCurrentMap": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setCurrentMap": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Delete.prototype = {
  "Hd": function () { },
  "_getSources": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "bp": function () { },
  "changed": function () { },
  "constructor": function () { },
  "delete": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getFeatures": function () { },
  "getHitTolerance": function () { },
  "getKeys": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStyle": function () { },
  "gp": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "mp": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setHitTolerance": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "tp": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "wp": function () { }
};
ol.interaction.DoubleClickZoom.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DoubleClickZoom.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragAndDrop.prototype = {
  "Av": function () { },
  "Cv": function () { },
  "Ev": function () { },
  "Tv": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDrop": function () { },
  "handleEvent": function () { },
  "handleStop": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DragAndDrop.DragAndDropEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragAndDrop.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragBox.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "defaultBoxEndCondition": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getGeometry": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onBoxEnd": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DragBox.DragBoxEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragBox.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragOverlay.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOverlay": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeOverlay": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DragPan.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DragPan.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragRotate.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DragRotate.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragRotateAndZoom.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DragRotateAndZoom.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragZoom.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "defaultBoxEndCondition": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getGeometry": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onBoxEnd": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DragZoom.DragBoxEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DragZoom.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Draw.prototype = {
  "Jn": function () { },
  "Vr": function () { },
  "abortDrawing": function () { },
  "ad": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendCoordinates": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "ed": function () { },
  "extend": function () { },
  "fd": function () { },
  "finishDrawing": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverlay": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hd": function () { },
  "ld": function () { },
  "notify": function () { },
  "od": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "rd": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeLastPoint": function () { },
  "sd": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "ud": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Draw.DrawEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Draw.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.DrawHole.prototype = {
  "Jn": function () { },
  "Vr": function () { },
  "_finishDrawing": function () { },
  "_geometryFn": function () { },
  "_startDrawing": function () { },
  "abortDrawing": function () { },
  "ad": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "appendCoordinates": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "ed": function () { },
  "extend": function () { },
  "fd": function () { },
  "finishDrawing": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverlay": function () { },
  "getPointerCount": function () { },
  "getPolygon": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hd": function () { },
  "ld": function () { },
  "notify": function () { },
  "od": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "rd": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeLastPoint": function () { },
  "sd": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "ud": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DrawRegular.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canRotate": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawPoint_": function () { },
  "drawSketch_": function () { },
  "end_": function () { },
  "finishDrawing": function () { },
  "get": function () { },
  "getActive": function () { },
  "getGeom_": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSides": function () { },
  "handleEvent": function () { },
  "handleEvent_": function () { },
  "handleMoveEvent_": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "reset": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSides": function () { },
  "startAngle": function () { },
  "start_": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DrawTouch.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addPoint": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "finishDrawing": function () { },
  "get": function () { },
  "getActive": function () { },
  "getGeometryType": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeLastPoint": function () { },
  "set": function () { },
  "setActive": function () { },
  "setGeometryType": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.DropFile.prototype = {
  "Av": function () { },
  "Cv": function () { },
  "Ev": function () { },
  "Tv": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDrop": function () { },
  "handleEvent": function () { },
  "handleStop": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "ondrop": function () { },
  "onstop": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Extent.prototype = {
  "Jn": function () { },
  "Sd": function () { },
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getExtent": function () { },
  "getExtentInternal": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "jd": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "xd": function () { }
};
ol.interaction.Extent.ExtentEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Extent.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.FillAttribute.prototype = {
  "Hd": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "bp": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fill": function () { },
  "get": function () { },
  "getActive": function () { },
  "getAttribute": function () { },
  "getAttributes": function () { },
  "getCursor": function () { },
  "getFeatures": function () { },
  "getHitTolerance": function () { },
  "getKeys": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStyle": function () { },
  "gp": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "mp": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setAttribute": function () { },
  "setAttributes": function () { },
  "setCursor": function () { },
  "setHitTolerance": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "tp": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "wp": function () { }
};
ol.interaction.Flashlight.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose_": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setColor": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setRadius": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.FocusMap.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.GeolocationDraw.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw_": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isPaused": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "pause": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "reset": function () { },
  "set": function () { },
  "setActive": function () { },
  "setFollowTrack": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "simplify3D": function () { },
  "simulate": function () { },
  "simulating": function () { },
  "start": function () { },
  "stop": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Hover.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "handleMove_": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setCursor": function () { },
  "setFeatureFilter": function () { },
  "setLayerFilter": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Interaction.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Interaction.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.KeyboardPan.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.KeyboardPan.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.KeyboardZoom.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.KeyboardZoom.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.LongTouch.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Modify.prototype = {
  "$d": function () { },
  "Bd": function () { },
  "Dd": function () { },
  "Fd": function () { },
  "Gd": function () { },
  "Hd": function () { },
  "Jd": function () { },
  "Jn": function () { },
  "Kd": function () { },
  "Ku": function () { },
  "Ld": function () { },
  "Qd": function () { },
  "Ud": function () { },
  "Vd": function () { },
  "Vr": function () { },
  "Xd": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "ep": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getModifiedFeatures": function () { },
  "getOverlay": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ip": function () { },
  "notify": function () { },
  "np": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "op": function () { },
  "qd": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removePoint": function () { },
  "rp": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "sp": function () { },
  "stopDown": function () { },
  "tp": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "zd": function () { }
};
ol.interaction.Modify.ModifyEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Modify.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.ModifyFeature.prototype = {
  "Vr": function () { },
  "_getModification": function () { },
  "_removePoint": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getArcs": function () { },
  "getClosestFeature": function () { },
  "getCurrentFeature": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getModifiedFeatures": function () { },
  "getNearestCoord": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removePoint": function () { },
  "set": function () { },
  "setActive": function () { },
  "setArcCoordinates": function () { },
  "setFilter": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.ModifyTouch.prototype = {
  "$d": function () { },
  "Bd": function () { },
  "Dd": function () { },
  "Fd": function () { },
  "Gd": function () { },
  "Hd": function () { },
  "Jd": function () { },
  "Jn": function () { },
  "Kd": function () { },
  "Ku": function () { },
  "Ld": function () { },
  "Qd": function () { },
  "Ud": function () { },
  "Vd": function () { },
  "Vr": function () { },
  "Xd": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "ep": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getModifiedFeatures": function () { },
  "getOverlay": function () { },
  "getPointerCount": function () { },
  "getPopupContent": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ip": function () { },
  "notify": function () { },
  "np": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "op": function () { },
  "qd": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removePoint": function () { },
  "rp": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPopupContent": function () { },
  "setProperties": function () { },
  "showDeleteBt": function () { },
  "sp": function () { },
  "stopDown": function () { },
  "tp": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "zd": function () { }
};
ol.interaction.MouseWheelZoom.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "ge": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setMouseAnchor": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "xe": function () { }
};
ol.interaction.MouseWheelZoom.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Offset.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getFeatureAtPixel_": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDownEvent_": function () { },
  "handleDragEvent": function () { },
  "handleDragEvent_": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleMoveEvent_": function () { },
  "handleUpEvent": function () { },
  "handleUpEvent_": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.PinchRotate.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.PinchRotate.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.PinchZoom.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.PinchZoom.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Pointer.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Pointer.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Ripple.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postcompose_": function () { },
  "rainDrop": function () { },
  "rains": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Select.prototype = {
  "Hd": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "bp": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getFeatures": function () { },
  "getHitTolerance": function () { },
  "getKeys": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStyle": function () { },
  "gp": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "mp": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setHitTolerance": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "tp": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "wp": function () { }
};
ol.interaction.Select.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Select.SelectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.SelectCluster.prototype = {
  "Hd": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animateCluster_": function () { },
  "applyProperties": function () { },
  "bp": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getClusterExtent": function () { },
  "getFeatures": function () { },
  "getHitTolerance": function () { },
  "getKeys": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStyle": function () { },
  "gp": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "mp": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "selectCluster": function () { },
  "set": function () { },
  "setActive": function () { },
  "setHitTolerance": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "tp": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "wp": function () { }
};
ol.interaction.Snap.prototype = {
  "Ap": function () { },
  "Cp": function () { },
  "Ep": function () { },
  "Fp": function () { },
  "Gp": function () { },
  "Ip": function () { },
  "Jd": function () { },
  "Kd": function () { },
  "Ku": function () { },
  "Lp": function () { },
  "Np": function () { },
  "Pp": function () { },
  "Rp": function () { },
  "Tp": function () { },
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "snapTo": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "zp": function () { }
};
ol.interaction.Snap.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.SnapGuides.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addGuide": function () { },
  "addOrthoGuide": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clearGuides": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getGuides": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setDrawInteraction": function () { },
  "setMap": function () { },
  "setModifyInteraction": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.SnapLayerPixel.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Split.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getClosestFeature": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getNearestCoord": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSources": function () { },
  "handleDownEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "setSources": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Splitter.prototype = {
  "_splitSource": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "intersectSegs": function () { },
  "notify": function () { },
  "onAddFeature": function () { },
  "onChangeFeature": function () { },
  "onInternal": function () { },
  "onRemoveFeature": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "splitSource": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Synchronize.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleEvent": function () { },
  "handleMouseOut_": function () { },
  "handleMove_": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "syncMaps": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.TinkerBell.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onMove": function () { },
  "onceInternal": function () { },
  "postcompose_": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.TouchCompass.prototype = {
  "Vr": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "compass": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawCompass_": function () { },
  "get": function () { },
  "getActive": function () { },
  "getCenter_": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.TouchCursor.prototype = {
  "Vr": function () { },
  "addButton": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOverlay": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getButtonElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverlay": function () { },
  "getOverlayElement": function () { },
  "getPixel": function () { },
  "getPointerCount": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "offsetPosition": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeButton": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeOverlay": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.TouchCursorDraw.prototype = {
  "Vr": function () { },
  "addButton": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOverlay": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getButtonElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverlay": function () { },
  "getOverlayElement": function () { },
  "getPixel": function () { },
  "getPointerCount": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getType": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "offsetPosition": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeButton": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeOverlay": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setType": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.TouchCursorModify.prototype = {
  "Vr": function () { },
  "addButton": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOverlay": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getButtonElement": function () { },
  "getInteraction": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverlay": function () { },
  "getOverlayElement": function () { },
  "getPixel": function () { },
  "getPointerCount": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "offsetPosition": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeButton": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeOverlay": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.TouchCursorSelect.prototype = {
  "Vr": function () { },
  "addButton": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addOverlay": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getButtonElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getOverlay": function () { },
  "getOverlayElement": function () { },
  "getPixel": function () { },
  "getPointerCount": function () { },
  "getPosition": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSelection": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "offsetPosition": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeButton": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeOverlay": function () { },
  "select": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Transform.prototype = {
  "Cursors": function () { },
  "Vr": function () { },
  "_isRectangle": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawSketch_": function () { },
  "get": function () { },
  "getActive": function () { },
  "getCenter": function () { },
  "getFeatureAtPixel_": function () { },
  "getFeatures": function () { },
  "getGeometryRotateToZero_": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDownEvent_": function () { },
  "handleDragEvent": function () { },
  "handleDragEvent_": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleMoveEvent_": function () { },
  "handleUpEvent": function () { },
  "handleUpEvent_": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "select": function () { },
  "set": function () { },
  "setActive": function () { },
  "setCenter": function () { },
  "setDefaultStyle": function () { },
  "setMap": function () { },
  "setPointRadius": function () { },
  "setProperties": function () { },
  "setSelection": function () { },
  "setStyle": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "watchFeatures_": function () { }
};
ol.interaction.Translate.prototype = {
  "Bp": function () { },
  "Vr": function () { },
  "Wp": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getHitTolerance": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getPointerCount": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "handleDownEvent": function () { },
  "handleDragEvent": function () { },
  "handleEvent": function () { },
  "handleMoveEvent": function () { },
  "handleUpEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "rd": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setHitTolerance": function () { },
  "setMap": function () { },
  "setProperties": function () { },
  "stopDown": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.interaction.Translate.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.Translate.TranslateEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.interaction.UndoRedo.prototype = {
  "_handleDo": function () { },
  "_onAddRemove": function () { },
  "_onInteraction": function () { },
  "_reduce": function () { },
  "_watchInteractions": function () { },
  "_watchSources": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "blockEnd": function () { },
  "blockStart": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "define": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getActive": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMap": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStack": function () { },
  "handleEvent": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRedo": function () { },
  "hasUndo": function () { },
  "length": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "push": function () { },
  "redo": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setMap": function () { },
  "setMaxLength": function () { },
  "setMaxSize": function () { },
  "setProperties": function () { },
  "shift": function () { },
  "size": function () { },
  "unInternal": function () { },
  "undo": function () { },
  "unset": function () { }
};
ol.layer.AnimatedCluster.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animate": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getClusterForFeature": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postanimate": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "saveCluster": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setRender3D": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setTextPathStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "stopAnimation": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Base.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getExtent": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSourceState": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.layer.Base.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.BaseImage.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.BaseImage.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.BaseTile.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreload": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getUseInterimTilesOnError": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setPreload": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setUseInterimTilesOnError": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.BaseTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.BaseVector.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.BaseVector.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.GeoImage.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Geoportail.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreload": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getUseInterimTilesOnError": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setPreload": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setUseInterimTilesOnError": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Graticule.prototype = {
  "Bl": function () { },
  "Hl": function () { },
  "Jl": function () { },
  "Kl": function () { },
  "Ul": function () { },
  "Vl": function () { },
  "Wl": function () { },
  "Xl": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMeridians": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getParallels": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "loaderFunction": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "ql": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setRender3D": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setTextPathStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "strategyFunction": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { },
  "zl": function () { }
};
ol.layer.Graticule.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Group.prototype = {
  "Mn": function () { },
  "Sn": function () { },
  "_n": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getExtent": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayers": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getSourceState": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "gn": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "jn": function () { },
  "kn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setLayers": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "xn": function () { }
};
ol.layer.Group.GroupEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Group.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Heatmap.prototype = {
  "Zl": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getBlur": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getGradient": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRadius": function () { },
  "getRenderBuffer": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setBlur": function () { },
  "setExtent": function () { },
  "setGradient": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setRadius": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Heatmap.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Image.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Image.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Layer.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Layer.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.MapboxVector.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "configureSource": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fetchStyle": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreload": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderMode": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getUseInterimTilesOnError": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "handleError": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onStyleLoad": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setPreload": function () { },
  "setProperties": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setUseInterimTilesOnError": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.MapboxVector.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Maplibre.prototype = {
  "_create": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapGL": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.SketchOverlay.prototype = {
  "abortDrawing": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "addPoint": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawLink": function () { },
  "drawSketch": function () { },
  "finishDrawing": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeature": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getGeometryType": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPosition": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "removeLastPoint": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setGeometryType": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setPosition": function () { },
  "setProperties": function () { },
  "setRender3D": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setTextPathStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "startDrawing": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Tile.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreload": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getUseInterimTilesOnError": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setPreload": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setUseInterimTilesOnError": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Tile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Vector.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setRender3D": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setTextPathStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.Vector.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.Vector3D.prototype = {
  "_getFeatureHeight": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animate": function () { },
  "animateFeature": function () { },
  "animating": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawFeature3D_": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeature3D_": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getHfn": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "hvector_": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onPostcompose_": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setHeight": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.VectorImage.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getImageRatio": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.VectorImage.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.VectorTile.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getDeclutter": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreload": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderBuffer": function () { },
  "getRenderMode": function () { },
  "getRenderOrder": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getStyle": function () { },
  "getStyleFunction": function () { },
  "getUpdateWhileAnimating": function () { },
  "getUpdateWhileInteracting": function () { },
  "getUseInterimTilesOnError": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderDeclutter": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setPreload": function () { },
  "setProperties": function () { },
  "setRenderOrder": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setUseInterimTilesOnError": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { }
};
ol.layer.VectorTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.WebGLPoints.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { },
  "updateStyleVariables": function () { }
};
ol.layer.WebGLPoints.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.layer.WebGLTile.prototype = {
  "Sv": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFilter": function () { },
  "animateFeature": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createRenderer": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "fn": function () { },
  "get": function () { },
  "getBackground": function () { },
  "getClassName": function () { },
  "getData": function () { },
  "getExtent": function () { },
  "getFeatures": function () { },
  "getFilters": function () { },
  "getKeys": function () { },
  "getLayerState": function () { },
  "getLayerStatesArray": function () { },
  "getLayersArray": function () { },
  "getListeners": function () { },
  "getMapInternal": function () { },
  "getMaxResolution": function () { },
  "getMaxZoom": function () { },
  "getMinResolution": function () { },
  "getMinZoom": function () { },
  "getOpacity": function () { },
  "getPreload": function () { },
  "getPreview": function () { },
  "getProperties": function () { },
  "getRenderSource": function () { },
  "getRenderer": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getSourceState": function () { },
  "getSources": function () { },
  "getUseInterimTilesOnError": function () { },
  "getVisible": function () { },
  "getZIndex": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hasRenderer": function () { },
  "hn": function () { },
  "jv": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFilter": function () { },
  "render": function () { },
  "renderSources": function () { },
  "set": function () { },
  "setBackground": function () { },
  "setExtent": function () { },
  "setMap": function () { },
  "setMapInternal": function () { },
  "setMaxResolution": function () { },
  "setMaxZoom": function () { },
  "setMinResolution": function () { },
  "setMinZoom": function () { },
  "setOpacity": function () { },
  "setPreload": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setStyle": function () { },
  "setUseInterimTilesOnError": function () { },
  "setVisible": function () { },
  "setZIndex": function () { },
  "unInternal": function () { },
  "unrender": function () { },
  "unset": function () { },
  "updateStyleVariables": function () { }
};
ol.layer.WebGLTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.legend.Item.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getElement": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setTitle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.legend.Legend.prototype = {
  "_drawText": function () { },
  "_measureText": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addItem": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getCanvas": function () { },
  "getItems": function () { },
  "getKeys": function () { },
  "getLegendImage": function () { },
  "getListElement": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getTextStyle": function () { },
  "getTitle": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "setTitle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.net.ClientError.prototype = {
  "constructor": function () { }
};
ol.net.ResponseError.prototype = {
  "constructor": function () { }
};
ol.particule.Base.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlay": function () { },
  "getProperties": function () { },
  "getRandomCoord": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setOverlay": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "update": function () { }
};
ol.particule.Bird.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlay": function () { },
  "getProperties": function () { },
  "getRandomCoord": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setOverlay": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "update": function () { }
};
ol.particule.Cloud.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlay": function () { },
  "getProperties": function () { },
  "getRandomCoord": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setOverlay": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "update": function () { }
};
ol.particule.Rain.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlay": function () { },
  "getProperties": function () { },
  "getRandomCoord": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setOverlay": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "update": function () { }
};
ol.particule.RainDrop.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlay": function () { },
  "getProperties": function () { },
  "getRandomCoord": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setOverlay": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "update": function () { }
};
ol.particule.Snow.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "draw": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlay": function () { },
  "getProperties": function () { },
  "getRandomCoord": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setOverlay": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "update": function () { }
};
ol.proj.Projection.prototype = {
  "canWrapX": function () { },
  "getAxisOrientation": function () { },
  "getCode": function () { },
  "getDefaultTileGrid": function () { },
  "getExtent": function () { },
  "getMetersPerUnit": function () { },
  "getPointResolutionFunc": function () { },
  "getUnits": function () { },
  "getWorldExtent": function () { },
  "isGlobal": function () { },
  "setDefaultTileGrid": function () { },
  "setExtent": function () { },
  "setGetPointResolution": function () { },
  "setGlobal": function () { },
  "setWorldExtent": function () { }
};
ol.render.Box.prototype = {
  "constructor": function () { },
  "createOrUpdateGeometry": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getGeometry": function () { },
  "ne": function () { },
  "setMap": function () { },
  "setPixels": function () { }
};
ol.render.Event.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.render.Feature.prototype = {
  "get": function () { },
  "getEnds": function () { },
  "getEndss": function () { },
  "getExtent": function () { },
  "getFlatCoordinates": function () { },
  "getFlatInteriorPoint": function () { },
  "getFlatInteriorPoints": function () { },
  "getFlatMidpoint": function () { },
  "getFlatMidpoints": function () { },
  "getGeometry": function () { },
  "getId": function () { },
  "getOrientedFlatCoordinates": function () { },
  "getProperties": function () { },
  "getSimplifiedGeometry": function () { },
  "getStride": function () { },
  "getStyleFunction": function () { },
  "getType": function () { },
  "simplifyTransformed": function () { },
  "transform": function () { }
};
ol.render.VectorContext.prototype = {
  "drawCircle": function () { },
  "drawCustom": function () { },
  "drawFeature": function () { },
  "drawGeometry": function () { },
  "drawGeometryCollection": function () { },
  "drawLineString": function () { },
  "drawMultiLineString": function () { },
  "drawMultiPoint": function () { },
  "drawMultiPolygon": function () { },
  "drawPoint": function () { },
  "drawPolygon": function () { },
  "drawText": function () { },
  "setFillStrokeStyle": function () { },
  "setImageStyle": function () { },
  "setStyle": function () { },
  "setTextStyle": function () { }
};
ol.render.canvas.Builder.prototype = {
  "Vh": function () { },
  "appendFlatLineCoordinates": function () { },
  "appendFlatPointCoordinates": function () { },
  "applyPixelRatio": function () { },
  "applyStroke": function () { },
  "beginGeometry": function () { },
  "constructor": function () { },
  "createFill": function () { },
  "createStroke": function () { },
  "drawCircle": function () { },
  "drawCustom": function () { },
  "drawFeature": function () { },
  "drawGeometry": function () { },
  "drawGeometryCollection": function () { },
  "drawLineString": function () { },
  "drawMultiLineString": function () { },
  "drawMultiPoint": function () { },
  "drawMultiPolygon": function () { },
  "drawPoint": function () { },
  "drawPolygon": function () { },
  "drawText": function () { },
  "endGeometry": function () { },
  "finish": function () { },
  "getBufferedMaxExtent": function () { },
  "reverseHitDetectionInstructions": function () { },
  "setFillStrokeStyle": function () { },
  "setImageStyle": function () { },
  "setStyle": function () { },
  "setTextStyle": function () { },
  "updateFillStyle": function () { },
  "updateStrokeStyle": function () { }
};
ol.render.canvas.BuilderGroup.prototype = {
  "finish": function () { },
  "getBuilder": function () { }
};
ol.render.canvas.Executor.prototype = {
  "Sf": function () { },
  "bf": function () { },
  "createLabel": function () { },
  "da": function () { },
  "execute": function () { },
  "executeHitDetection": function () { },
  "gf": function () { },
  "jf": function () { },
  "wf": function () { },
  "xf": function () { }
};
ol.render.canvas.ExecutorGroup.prototype = {
  "Of": function () { },
  "clip": function () { },
  "execute": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getClipCoords": function () { },
  "hasExecutors": function () { },
  "isEmpty": function () { }
};
ol.render.canvas.ImageBuilder.prototype = {
  "Vh": function () { },
  "appendFlatLineCoordinates": function () { },
  "appendFlatPointCoordinates": function () { },
  "applyPixelRatio": function () { },
  "applyStroke": function () { },
  "beginGeometry": function () { },
  "constructor": function () { },
  "createFill": function () { },
  "createStroke": function () { },
  "drawCircle": function () { },
  "drawCustom": function () { },
  "drawFeature": function () { },
  "drawGeometry": function () { },
  "drawGeometryCollection": function () { },
  "drawLineString": function () { },
  "drawMultiLineString": function () { },
  "drawMultiPoint": function () { },
  "drawMultiPolygon": function () { },
  "drawPoint": function () { },
  "drawPolygon": function () { },
  "drawText": function () { },
  "endGeometry": function () { },
  "finish": function () { },
  "getBufferedMaxExtent": function () { },
  "reverseHitDetectionInstructions": function () { },
  "setFillStrokeStyle": function () { },
  "setImageStyle": function () { },
  "setStyle": function () { },
  "setTextStyle": function () { },
  "updateFillStyle": function () { },
  "updateStrokeStyle": function () { }
};
ol.render.canvas.Immediate.prototype = {
  "So": function () { },
  "bo": function () { },
  "constructor": function () { },
  "drawCircle": function () { },
  "drawCustom": function () { },
  "drawFeature": function () { },
  "drawGeometry": function () { },
  "drawGeometryCollection": function () { },
  "drawLineString": function () { },
  "drawMultiLineString": function () { },
  "drawMultiPoint": function () { },
  "drawMultiPolygon": function () { },
  "drawPoint": function () { },
  "drawPolygon": function () { },
  "drawText": function () { },
  "jo": function () { },
  "mo": function () { },
  "setFillStrokeStyle": function () { },
  "setImageStyle": function () { },
  "setStyle": function () { },
  "setTextStyle": function () { },
  "setTransform": function () { },
  "wo": function () { },
  "xo": function () { },
  "yo": function () { }
};
ol.render.canvas.LineStringBuilder.prototype = {
  "Qh": function () { },
  "Vh": function () { },
  "appendFlatLineCoordinates": function () { },
  "appendFlatPointCoordinates": function () { },
  "applyPixelRatio": function () { },
  "applyStroke": function () { },
  "beginGeometry": function () { },
  "constructor": function () { },
  "createFill": function () { },
  "createStroke": function () { },
  "drawCircle": function () { },
  "drawCustom": function () { },
  "drawFeature": function () { },
  "drawGeometry": function () { },
  "drawGeometryCollection": function () { },
  "drawLineString": function () { },
  "drawMultiLineString": function () { },
  "drawMultiPoint": function () { },
  "drawMultiPolygon": function () { },
  "drawPoint": function () { },
  "drawPolygon": function () { },
  "drawText": function () { },
  "endGeometry": function () { },
  "finish": function () { },
  "getBufferedMaxExtent": function () { },
  "reverseHitDetectionInstructions": function () { },
  "setFillStrokeStyle": function () { },
  "setImageStyle": function () { },
  "setStyle": function () { },
  "setTextStyle": function () { },
  "updateFillStyle": function () { },
  "updateStrokeStyle": function () { }
};
ol.render.canvas.PolygonBuilder.prototype = {
  "Vh": function () { },
  "appendFlatLineCoordinates": function () { },
  "appendFlatPointCoordinates": function () { },
  "applyPixelRatio": function () { },
  "applyStroke": function () { },
  "beginGeometry": function () { },
  "constructor": function () { },
  "createFill": function () { },
  "createStroke": function () { },
  "drawCircle": function () { },
  "drawCustom": function () { },
  "drawFeature": function () { },
  "drawGeometry": function () { },
  "drawGeometryCollection": function () { },
  "drawLineString": function () { },
  "drawMultiLineString": function () { },
  "drawMultiPoint": function () { },
  "drawMultiPolygon": function () { },
  "drawPoint": function () { },
  "drawPolygon": function () { },
  "drawText": function () { },
  "endGeometry": function () { },
  "finish": function () { },
  "getBufferedMaxExtent": function () { },
  "nf": function () { },
  "reverseHitDetectionInstructions": function () { },
  "setFillStrokeStyle": function () { },
  "setImageStyle": function () { },
  "setStyle": function () { },
  "setTextStyle": function () { },
  "tf": function () { },
  "updateFillStyle": function () { },
  "updateStrokeStyle": function () { }
};
ol.render.canvas.TextBuilder.prototype = {
  "Vh": function () { },
  "appendFlatLineCoordinates": function () { },
  "appendFlatPointCoordinates": function () { },
  "applyPixelRatio": function () { },
  "applyStroke": function () { },
  "beginGeometry": function () { },
  "cf": function () { },
  "constructor": function () { },
  "createFill": function () { },
  "createStroke": function () { },
  "drawCircle": function () { },
  "drawCustom": function () { },
  "drawFeature": function () { },
  "drawGeometry": function () { },
  "drawGeometryCollection": function () { },
  "drawLineString": function () { },
  "drawMultiLineString": function () { },
  "drawMultiPoint": function () { },
  "drawMultiPolygon": function () { },
  "drawPoint": function () { },
  "drawPolygon": function () { },
  "drawText": function () { },
  "endGeometry": function () { },
  "finish": function () { },
  "getBufferedMaxExtent": function () { },
  "reverseHitDetectionInstructions": function () { },
  "setFillStrokeStyle": function () { },
  "setImageStyle": function () { },
  "setStyle": function () { },
  "setTextStyle": function () { },
  "uf": function () { },
  "updateFillStyle": function () { },
  "updateStrokeStyle": function () { }
};
ol.render.canvas.checkedFonts.constructor.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setProperties": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.render.canvas.checkedFonts.constructor.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.render.canvas.labelCache.constructor.prototype = {
  "addEventListener": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getListeners": function () { },
  "hasListener": function () { },
  "removeEventListener": function () { }
};
ol.render3D.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "animate": function () { },
  "animating": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawFeature3D_": function () { },
  "drawGhost3D_": function () { },
  "get": function () { },
  "getActive": function () { },
  "getFeature3D_": function () { },
  "getFeatureHeight": function () { },
  "getHfn": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getProperties": function () { },
  "getRevision": function () { },
  "getStyle": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hvector_": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onPostcompose_": function () { },
  "onceInternal": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setActive": function () { },
  "setLayer": function () { },
  "setProperties": function () { },
  "setStyle": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.renderer.Composite.prototype = {
  "calculateMatrices2D": function () { },
  "constructor": function () { },
  "dispatchRenderEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "forEachLayerAtPixel": function () { },
  "getMap": function () { },
  "hasFeatureAtCoordinate": function () { },
  "renderFrame": function () { },
  "scheduleExpireIconCache": function () { }
};
ol.renderer.Layer.prototype = {
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "prepareFrame": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "unInternal": function () { }
};
ol.renderer.Map.prototype = {
  "calculateMatrices2D": function () { },
  "constructor": function () { },
  "dispatchRenderEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "forEachLayerAtPixel": function () { },
  "getMap": function () { },
  "hasFeatureAtCoordinate": function () { },
  "renderFrame": function () { },
  "scheduleExpireIconCache": function () { }
};
ol.renderer.canvas.ImageLayer.prototype = {
  "Hs": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "clipUnrotated": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getBackground": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getImage": function () { },
  "getImageData": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRenderTransform": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "unInternal": function () { },
  "useContainer": function () { }
};
ol.renderer.canvas.Layer.prototype = {
  "Hs": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "clipUnrotated": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getBackground": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getImageData": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRenderTransform": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "unInternal": function () { },
  "useContainer": function () { }
};
ol.renderer.canvas.TileLayer.prototype = {
  "Hs": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "clipUnrotated": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawTileImage": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getBackground": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getImage": function () { },
  "getImageData": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRenderTransform": function () { },
  "getRevision": function () { },
  "getTile": function () { },
  "getTileImage": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "isDrawableTile": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "manageTilePyramid": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "scheduleExpireCache": function () { },
  "unInternal": function () { },
  "updateUsedTiles": function () { },
  "useContainer": function () { }
};
ol.renderer.canvas.VectorImageLayer.prototype = {
  "Hs": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "clipUnrotated": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getBackground": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getImage": function () { },
  "getImageData": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRenderTransform": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "renderDeclutter": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "unInternal": function () { },
  "useContainer": function () { }
};
ol.renderer.canvas.VectorLayer.prototype = {
  "Ef": function () { },
  "Hs": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "clipUnrotated": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getBackground": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getImageData": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRenderTransform": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "renderDeclutter": function () { },
  "renderFeature": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "renderWorlds": function () { },
  "unInternal": function () { },
  "useContainer": function () { }
};
ol.renderer.canvas.VectorTileLayer.prototype = {
  "Ef": function () { },
  "Hf": function () { },
  "Hs": function () { },
  "Jf": function () { },
  "Kf": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "clipUnrotated": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawTileImage": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getBackground": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getImage": function () { },
  "getImageData": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRenderTransform": function () { },
  "getRevision": function () { },
  "getTile": function () { },
  "getTileImage": function () { },
  "getTileRenderTransform": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "isDrawableTile": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "manageTilePyramid": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "prepareTile": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "renderDeclutter": function () { },
  "renderFeature": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "scheduleExpireCache": function () { },
  "unInternal": function () { },
  "updateUsedTiles": function () { },
  "useContainer": function () { }
};
ol.renderer.webgl.Layer.prototype = {
  "Hs": function () { },
  "addEventListener": function () { },
  "afterHelperCreated": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispatchPostComposeEvent": function () { },
  "dispatchPreComposeEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "prepareFrameInternal": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "removeHelper": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "reset": function () { },
  "unInternal": function () { }
};
ol.renderer.webgl.PointsLayer.prototype = {
  "Dh": function () { },
  "Fh": function () { },
  "Gh": function () { },
  "Hs": function () { },
  "Lh": function () { },
  "addEventListener": function () { },
  "afterHelperCreated": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispatchPostComposeEvent": function () { },
  "dispatchPreComposeEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "prepareFrameInternal": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "removeHelper": function () { },
  "renderFrame": function () { },
  "renderHitDetection": function () { },
  "renderIfReadyAndVisible": function () { },
  "reset": function () { },
  "unInternal": function () { },
  "zh": function () { }
};
ol.renderer.webgl.TileLayer.prototype = {
  "Hs": function () { },
  "addEventListener": function () { },
  "afterHelperCreated": function () { },
  "changed": function () { },
  "constructor": function () { },
  "createLoadedTileFinder": function () { },
  "dispatchEvent": function () { },
  "dispatchPostComposeEvent": function () { },
  "dispatchPreComposeEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "enqueueTiles": function () { },
  "forEachFeatureAtCoordinate": function () { },
  "getData": function () { },
  "getDataAtPixel": function () { },
  "getFeatures": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getRevision": function () { },
  "handleFontsChanged": function () { },
  "hasListener": function () { },
  "loadImage": function () { },
  "loadedTileCallback": function () { },
  "oa": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "postRender": function () { },
  "preRender": function () { },
  "prepareFrame": function () { },
  "prepareFrameInternal": function () { },
  "qs": function () { },
  "removeEventListener": function () { },
  "removeHelper": function () { },
  "renderFrame": function () { },
  "renderIfReadyAndVisible": function () { },
  "reset": function () { },
  "sa": function () { },
  "unInternal": function () { }
};
ol.reproj.Image.prototype = {
  "Fs": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getExtent": function () { },
  "getImage": function () { },
  "getListeners": function () { },
  "getPixelRatio": function () { },
  "getProjection": function () { },
  "getResolution": function () { },
  "getState": function () { },
  "hasListener": function () { },
  "load": function () { },
  "removeEventListener": function () { },
  "wc": function () { }
};
ol.reproj.Tile.prototype = {
  "Fs": function () { },
  "Ls": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "getAlpha": function () { },
  "getImage": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "setState": function () { }
};
ol.reproj.Triangulation.prototype = {
  "Os": function () { },
  "_s": function () { },
  "calculateSourceExtent": function () { },
  "getTriangles": function () { }
};
ol.source.BinBase.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_flatAttributes": function () { },
  "_onAddFeature": function () { },
  "_onClearFeature": function () { },
  "_onModifyFeature": function () { },
  "_onRemoveFeature": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getBin": function () { },
  "getBinAt": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getGridFeatures": function () { },
  "getGridGeomAt": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "reset": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setFlatAttributesFn": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.BingMaps.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getApiKey": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getImagerySet": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageryMetadataResponse": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.BingMaps.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.BingMaps.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.CartoDB.prototype = {
  "Iu": function () { },
  "Nu": function () { },
  "Pu": function () { },
  "Ru": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getConfig": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setConfig": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "updateConfig": function () { },
  "useTile": function () { }
};
ol.source.CartoDB.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.CartoDB.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Cluster.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "cluster": function () { },
  "constructor": function () { },
  "createCluster": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getDistance": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMinDistance": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setDistance": function () { },
  "setLoader": function () { },
  "setMinDistance": function () { },
  "setProperties": function () { },
  "setSource": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateDistance": function () { }
};
ol.source.Cluster.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Cluster.VectorSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.DBPedia.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_loaderFn": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "queryFilter": function () { },
  "querySubject": function () { },
  "readFeature": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.DFCI.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_calcGrid": function () { },
  "_getFeatures": function () { },
  "_midPt": function () { },
  "_trFeature": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.DataTile.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hr": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.DataTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.DataTile.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.DayNight.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_loader": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getCoordinates": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getSunPosition": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setTime": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Delaunay.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_addTriangle": function () { },
  "_onAddNode": function () { },
  "_onRemoveNode": function () { },
  "_ptInTriangle": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "calculateVoronoi": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "flipTriangles": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getCircumCircle": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getNodeSource": function () { },
  "getNodes": function () { },
  "getNodesAt": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTrianglesAt": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "inCircle": function () { },
  "intersectSegs": function () { },
  "isEmpty": function () { },
  "listpt": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.FeatureBin.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_flatAttributes": function () { },
  "_onAddFeature": function () { },
  "_onClearFeature": function () { },
  "_onModifyFeature": function () { },
  "_onRemoveFeature": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getBin": function () { },
  "getBinAt": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getGridFeatures": function () { },
  "getGridGeomAt": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "reset": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setFeatures": function () { },
  "setFlatAttributesFn": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.GeoImage.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "calculateExtent": function () { },
  "calculateImage": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getCenter": function () { },
  "getCrop": function () { },
  "getExtent": function () { },
  "getGeoImage": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getMask": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getState": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setCenter": function () { },
  "setCrop": function () { },
  "setMask": function () { },
  "setProperties": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.GeoRSS.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_loaderFn": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.GeoTIFF.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "fc": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getError": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hc": function () { },
  "hr": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.GeoTIFF.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.GeoTIFF.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Geoportail.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "attribution": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "createFromWMTSTemplate": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "fh": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getDimensions": function () { },
  "getFeatureInfo": function () { },
  "getFeatureInfoUrl": function () { },
  "getFormat": function () { },
  "getGPPKey": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getMatrixSet": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getRequestEncoding": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getStyle": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getVersion": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "serviceURL": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setGPPKey": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "updateDimensions": function () { },
  "useTile": function () { }
};
ol.source.GridBin.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_flatAttributes": function () { },
  "_onAddFeature": function () { },
  "_onClearFeature": function () { },
  "_onModifyFeature": function () { },
  "_onRemoveFeature": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getBin": function () { },
  "getBinAt": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getGridFeatures": function () { },
  "getGridGeomAt": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "reset": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setFlatAttributesFn": function () { },
  "setGridProjection": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.HexBin.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_flatAttributes": function () { },
  "_onAddFeature": function () { },
  "_onClearFeature": function () { },
  "_onModifyFeature": function () { },
  "_onRemoveFeature": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getBin": function () { },
  "getBinAt": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getGridFeatures": function () { },
  "getGridGeomAt": function () { },
  "getHexFeatures": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getLayout": function () { },
  "getListeners": function () { },
  "getOrigin": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSize": function () { },
  "getSource": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "reset": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setFlatAttributesFn": function () { },
  "setLayout": function () { },
  "setLoader": function () { },
  "setOrigin": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.IDW.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "calculateImage": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getColor": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSource": function () { },
  "getState": function () { },
  "getValue": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "hue2rgb": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setData": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.IIIF.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.IIIF.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.IIIF.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Image.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Image.ImageSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Image.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageArcGISRest.prototype = {
  "Mc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getImageLoadFunction": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getParams": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setImageLoadFunction": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateParams": function () { }
};
ol.source.ImageArcGISRest.ImageSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageArcGISRest.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageCanvas.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.ImageCanvas.ImageSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageCanvas.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageMapGuide.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getImageLoadFunction": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getParams": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setImageLoadFunction": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateParams": function () { }
};
ol.source.ImageMapGuide.ImageSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageMapGuide.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageStatic.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getImage": function () { },
  "getImageExtent": function () { },
  "getImageInternal": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.ImageStatic.ImageSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageStatic.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageWMS.prototype = {
  "Cc": function () { },
  "Mc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getFeatureInfoUrl": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getImageLoadFunction": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getLegendUrl": function () { },
  "getListeners": function () { },
  "getParams": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setImageLoadFunction": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateParams": function () { }
};
ol.source.ImageWMS.ImageSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.ImageWMS.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.InseeBin.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_flatAttributes": function () { },
  "_onAddFeature": function () { },
  "_onClearFeature": function () { },
  "_onModifyFeature": function () { },
  "_onRemoveFeature": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getBin": function () { },
  "getBinAt": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getGridExtent": function () { },
  "getGridFeatures": function () { },
  "getGridGeomAt": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSize": function () { },
  "getSource": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "reset": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setFlatAttributesFn": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setSize": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Mapillary.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_loaderFn": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "readFeature": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.OGCMapTile.prototype = {
  "Ic": function () { },
  "Pc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.OGCMapTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.OGCMapTile.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.OGCVectorTile.prototype = {
  "Ic": function () { },
  "Pc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getFeaturesInExtent": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSourceTiles": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.OGCVectorTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.OGCVectorTile.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.OSM.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.OSM.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.OSM.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.OilPainting.prototype = {
  "Hc": function () { },
  "Jc": function () { },
  "Vc": function () { },
  "Xc": function () { },
  "_operation": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setOperation": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Overpass.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_loaderFn": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Raster.prototype = {
  "Hc": function () { },
  "Jc": function () { },
  "Vc": function () { },
  "Xc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "findNearestResolution": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getImage": function () { },
  "getImageInternal": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleImageChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setOperation": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Raster.ImageSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Raster.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Raster.Processor.prototype = {
  "_dispatch": function () { },
  "_enqueue": function () { },
  "_onWorkerMessage": function () { },
  "_resolveJob": function () { },
  "constructor": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "process": function () { }
};
ol.source.Raster.RasterSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Source.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Source.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Stamen.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.Stamen.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Stamen.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Tile.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.Tile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Tile.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileArcGISRest.prototype = {
  "Kc": function () { },
  "Mc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getParams": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "updateParams": function () { },
  "useTile": function () { }
};
ol.source.TileArcGISRest.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileArcGISRest.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileDebug.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.TileDebug.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileDebug.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileImage.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.TileImage.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileImage.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileJSON.prototype = {
  "$c": function () { },
  "Zc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileJSON": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "handleTileJSONError": function () { },
  "handleTileJSONResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.TileJSON.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileJSON.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileWFS.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_loadTile": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.TileWMS.prototype = {
  "Cc": function () { },
  "Kc": function () { },
  "Mc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getFeatureInfoUrl": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getLegendUrl": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getParams": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "updateParams": function () { },
  "useTile": function () { }
};
ol.source.TileWMS.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.TileWMS.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.UTFGrid.prototype = {
  "$c": function () { },
  "Zc": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forDataAtCoordinateAndResolution": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTemplate": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileJSONError": function () { },
  "handleTileJSONResponse": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.UTFGrid.CustomTile.prototype = {
  "$c": function () { },
  "Ic": function () { },
  "Zc": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "forDataAtCoordinate": function () { },
  "getAlpha": function () { },
  "getData": function () { },
  "getImage": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "qt": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "rh": function () { },
  "setState": function () { }
};
ol.source.UTFGrid.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.UTFGrid.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.UrlTile.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.UrlTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.UrlTile.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Vector.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.Vector.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Vector.VectorSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.VectorTile.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getFeaturesInExtent": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getSourceTiles": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.VectorTile.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.VectorTile.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.WMTS.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "createFromWMTSTemplate": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "fh": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getDimensions": function () { },
  "getFormat": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getLayer": function () { },
  "getListeners": function () { },
  "getMatrixSet": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getRequestEncoding": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getStyle": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getVersion": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "updateDimensions": function () { },
  "useTile": function () { }
};
ol.source.WMTS.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.WMTS.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.WikiCommons.prototype = {
  "Hu": function () { },
  "Ju": function () { },
  "Ku": function () { },
  "Xu": function () { },
  "Yu": function () { },
  "_loaderFn": function () { },
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "addFeature": function () { },
  "addFeatureInternal": function () { },
  "addFeatures": function () { },
  "addFeaturesInternal": function () { },
  "applyProperties": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "forEachFeature": function () { },
  "forEachFeatureAtCoordinateDirect": function () { },
  "forEachFeatureInExtent": function () { },
  "forEachFeatureIntersectingExtent": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getClosestFeatureToCoordinate": function () { },
  "getExtent": function () { },
  "getFeatureById": function () { },
  "getFeatureByUid": function () { },
  "getFeatures": function () { },
  "getFeaturesAtCoordinate": function () { },
  "getFeaturesCollection": function () { },
  "getFeaturesInExtent": function () { },
  "getFormat": function () { },
  "getInterpolate": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOverlaps": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getUrl": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "hasFeature": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "isEmpty": function () { },
  "loadFeatures": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "readFeature": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "removeFeature": function () { },
  "removeFeatureInternal": function () { },
  "removeLoadedExtent": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setLoader": function () { },
  "setProperties": function () { },
  "setState": function () { },
  "setUrl": function () { },
  "unInternal": function () { },
  "unset": function () { }
};
ol.source.XYZ.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.XYZ.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.XYZ.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Zoomify.prototype = {
  "addChangeListener": function () { },
  "addEventListener": function () { },
  "applyProperties": function () { },
  "canExpireCache": function () { },
  "changed": function () { },
  "clear": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "expireCache": function () { },
  "forEachLoadedTile": function () { },
  "get": function () { },
  "getAttributions": function () { },
  "getAttributionsCollapsible": function () { },
  "getGutter": function () { },
  "getGutterForProjection": function () { },
  "getInterpolate": function () { },
  "getKey": function () { },
  "getKeys": function () { },
  "getListeners": function () { },
  "getOpaque": function () { },
  "getPreview": function () { },
  "getProjection": function () { },
  "getProperties": function () { },
  "getResolutions": function () { },
  "getRevision": function () { },
  "getState": function () { },
  "getTile": function () { },
  "getTileCacheForProjection": function () { },
  "getTileCoordForTileUrlFunction": function () { },
  "getTileGrid": function () { },
  "getTileGridForProjection": function () { },
  "getTileInternal": function () { },
  "getTileLoadFunction": function () { },
  "getTilePixelRatio": function () { },
  "getTilePixelSize": function () { },
  "getTileUrlFunction": function () { },
  "getUrls": function () { },
  "getView": function () { },
  "getWrapX": function () { },
  "handleTileChange": function () { },
  "hasListener": function () { },
  "hasProperties": function () { },
  "ju": function () { },
  "notify": function () { },
  "onInternal": function () { },
  "onceInternal": function () { },
  "refresh": function () { },
  "removeChangeListener": function () { },
  "removeEventListener": function () { },
  "set": function () { },
  "setAttributions": function () { },
  "setKey": function () { },
  "setProperties": function () { },
  "setRenderReprojectionEdges": function () { },
  "setState": function () { },
  "setTileGridForProjection": function () { },
  "setTileLoadFunction": function () { },
  "setTileUrlFunction": function () { },
  "setUrl": function () { },
  "setUrls": function () { },
  "tileUrlFunction": function () { },
  "unInternal": function () { },
  "unset": function () { },
  "updateCacheSize": function () { },
  "useTile": function () { }
};
ol.source.Zoomify.CustomTile.prototype = {
  "Dt": function () { },
  "Gt": function () { },
  "Lt": function () { },
  "addEventListener": function () { },
  "changed": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "endTransition": function () { },
  "getAlpha": function () { },
  "getImage": function () { },
  "getInterimTile": function () { },
  "getKey": function () { },
  "getListeners": function () { },
  "getState": function () { },
  "getTileCoord": function () { },
  "hasListener": function () { },
  "inTransition": function () { },
  "load": function () { },
  "refreshInterimChain": function () { },
  "release": function () { },
  "removeEventListener": function () { },
  "setImage": function () { },
  "setState": function () { }
};
ol.source.Zoomify.ObjectEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.source.Zoomify.TileSourceEvent.prototype = {
  "constructor": function () { },
  "preventDefault": function () { },
  "stopPropagation": function () { }
};
ol.structs.LRUCache.prototype = {
  "canExpireCache": function () { },
  "clear": function () { },
  "containsKey": function () { },
  "expireCache": function () { },
  "forEach": function () { },
  "get": function () { },
  "getCount": function () { },
  "getKeys": function () { },
  "getValues": function () { },
  "peekFirstKey": function () { },
  "peekLast": function () { },
  "peekLastKey": function () { },
  "pop": function () { },
  "remove": function () { },
  "replace": function () { },
  "set": function () { },
  "setSize": function () { }
};
ol.structs.LinkedList.prototype = {
  "concat": function () { },
  "firstItem": function () { },
  "getCurrItem": function () { },
  "getLength": function () { },
  "getNextItem": function () { },
  "getPrevItem": function () { },
  "insertItem": function () { },
  "lastItem": function () { },
  "nextItem": function () { },
  "prevItem": function () { },
  "removeItem": function () { },
  "setFirstItem": function () { }
};
ol.structs.PriorityQueue.prototype = {
  "clear": function () { },
  "dequeue": function () { },
  "ei": function () { },
  "enqueue": function () { },
  "getCount": function () { },
  "ii": function () { },
  "isEmpty": function () { },
  "isKeyQueued": function () { },
  "isQueued": function () { },
  "ni": function () { },
  "oi": function () { },
  "reprioritize": function () { },
  "ri": function () { },
  "si": function () { }
};
ol.structs.RBush.prototype = {
  "clear": function () { },
  "concat": function () { },
  "forEach": function () { },
  "forEachInExtent": function () { },
  "fu": function () { },
  "getAll": function () { },
  "getExtent": function () { },
  "getInExtent": function () { },
  "insert": function () { },
  "isEmpty": function () { },
  "load": function () { },
  "remove": function () { },
  "update": function () { }
};
ol.style.Chart.prototype = {
  "Sa": function () { },
  "ba": function () { },
  "clone": function () { },
  "constructor": function () { },
  "createRenderOptions": function () { },
  "ga": function () { },
  "getAnchor": function () { },
  "getAngle": function () { },
  "getData": function () { },
  "getDisplacement": function () { },
  "getFill": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getPoints": function () { },
  "getRadius": function () { },
  "getRadius2": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getStroke": function () { },
  "ja": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "render": function () { },
  "renderChart_": function () { },
  "setAnimation": function () { },
  "setData": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRadius": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { },
  "xa": function () { }
};
ol.style.Circle.prototype = {
  "Sa": function () { },
  "ba": function () { },
  "clone": function () { },
  "constructor": function () { },
  "createRenderOptions": function () { },
  "ga": function () { },
  "getAnchor": function () { },
  "getAngle": function () { },
  "getDisplacement": function () { },
  "getFill": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getPoints": function () { },
  "getRadius": function () { },
  "getRadius2": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getStroke": function () { },
  "ja": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "render": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRadius": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { },
  "xa": function () { }
};
ol.style.Fill.prototype = {
  "clone": function () { },
  "getColor": function () { },
  "setColor": function () { }
};
ol.style.FillPattern.prototype = {
  "clone": function () { },
  "constructor": function () { },
  "getColor": function () { },
  "getImage": function () { },
  "getPattern_": function () { },
  "patterns": function () { },
  "setColor": function () { }
};
ol.style.FlowLine.prototype = {
  "_render": function () { },
  "_splitAsize": function () { },
  "_splitInto": function () { },
  "clone": function () { },
  "constructor": function () { },
  "drawArrow": function () { },
  "getArrow": function () { },
  "getArrowSize": function () { },
  "getColor": function () { },
  "getFill": function () { },
  "getGeometry": function () { },
  "getGeometryFunction": function () { },
  "getHitDetectionRenderer": function () { },
  "getImage": function () { },
  "getOffset": function () { },
  "getRenderer": function () { },
  "getStroke": function () { },
  "getText": function () { },
  "getWidth": function () { },
  "getZIndex": function () { },
  "setArrow": function () { },
  "setArrowColor": function () { },
  "setArrowSize": function () { },
  "setColor": function () { },
  "setColor2": function () { },
  "setFill": function () { },
  "setGeometry": function () { },
  "setHitDetectionRenderer": function () { },
  "setImage": function () { },
  "setLineCap": function () { },
  "setOffset": function () { },
  "setRenderer": function () { },
  "setStroke": function () { },
  "setText": function () { },
  "setWidth": function () { },
  "setWidth2": function () { },
  "setZIndex": function () { }
};
ol.style.FontSymbol.prototype = {
  "Sa": function () { },
  "ba": function () { },
  "clone": function () { },
  "constructor": function () { },
  "createRenderOptions": function () { },
  "defs": function () { },
  "drawMarker_": function () { },
  "drawPath_": function () { },
  "ga": function () { },
  "getAnchor": function () { },
  "getAngle": function () { },
  "getChecksum": function () { },
  "getDisplacement": function () { },
  "getFill": function () { },
  "getFontInfo": function () { },
  "getGlyph": function () { },
  "getGlyphName": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getPoints": function () { },
  "getRadius": function () { },
  "getRadius2": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getStroke": function () { },
  "getTextGlyph": function () { },
  "ja": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "render": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { },
  "xa": function () { }
};
ol.style.Icon.prototype = {
  "clone": function () { },
  "constructor": function () { },
  "getAnchor": function () { },
  "getColor": function () { },
  "getDisplacement": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getSrc": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "setAnchor": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { }
};
ol.style.IconImage.prototype = {
  "Aa": function () { },
  "Dt": function () { },
  "Ea": function () { },
  "Gt": function () { },
  "Lt": function () { },
  "Ta": function () { },
  "addEventListener": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImageState": function () { },
  "getListeners": function () { },
  "getPixelRatio": function () { },
  "getSize": function () { },
  "getSrc": function () { },
  "hasListener": function () { },
  "load": function () { },
  "removeEventListener": function () { }
};
ol.style.IconImageCache.prototype = {
  "canExpireCache": function () { },
  "clear": function () { },
  "expire": function () { },
  "get": function () { },
  "set": function () { },
  "setSize": function () { }
};
ol.style.Image.prototype = {
  "clone": function () { },
  "getAnchor": function () { },
  "getDisplacement": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { }
};
ol.style.Photo.prototype = {
  "Sa": function () { },
  "ba": function () { },
  "clone": function () { },
  "constructor": function () { },
  "createRenderOptions": function () { },
  "drawBack_": function () { },
  "drawImage_": function () { },
  "ga": function () { },
  "getAnchor": function () { },
  "getAngle": function () { },
  "getDisplacement": function () { },
  "getFill": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getPoints": function () { },
  "getRadius": function () { },
  "getRadius2": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getStroke": function () { },
  "ja": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "render": function () { },
  "setDisplacement": function () { },
  "setOffset": function () { },
  "setOpacity": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { },
  "xa": function () { }
};
ol.style.Profile.prototype = {
  "_render": function () { },
  "_renderLine": function () { },
  "clone": function () { },
  "constructor": function () { },
  "getFill": function () { },
  "getGeometry": function () { },
  "getGeometryFunction": function () { },
  "getHitDetectionRenderer": function () { },
  "getImage": function () { },
  "getRenderer": function () { },
  "getScale": function () { },
  "getStroke": function () { },
  "getText": function () { },
  "getZIndex": function () { },
  "setFill": function () { },
  "setGeometry": function () { },
  "setHitDetectionRenderer": function () { },
  "setImage": function () { },
  "setRenderer": function () { },
  "setScale": function () { },
  "setStroke": function () { },
  "setText": function () { },
  "setZIndex": function () { }
};
ol.style.RegularShape.prototype = {
  "Sa": function () { },
  "ba": function () { },
  "clone": function () { },
  "constructor": function () { },
  "createRenderOptions": function () { },
  "ga": function () { },
  "getAnchor": function () { },
  "getAngle": function () { },
  "getDisplacement": function () { },
  "getFill": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getPoints": function () { },
  "getRadius": function () { },
  "getRadius2": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getStroke": function () { },
  "ja": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "render": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { },
  "xa": function () { }
};
ol.style.Shadow.prototype = {
  "Sa": function () { },
  "ba": function () { },
  "clone": function () { },
  "constructor": function () { },
  "createRenderOptions": function () { },
  "ga": function () { },
  "getAnchor": function () { },
  "getAngle": function () { },
  "getDisplacement": function () { },
  "getFill": function () { },
  "getHitDetectionImage": function () { },
  "getImage": function () { },
  "getImagePNG": function () { },
  "getImageSize": function () { },
  "getImageState": function () { },
  "getOpacity": function () { },
  "getOrigin": function () { },
  "getPixelRatio": function () { },
  "getPoints": function () { },
  "getRadius": function () { },
  "getRadius2": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getSize": function () { },
  "getStroke": function () { },
  "ja": function () { },
  "listenImageChange": function () { },
  "load": function () { },
  "render": function () { },
  "setDisplacement": function () { },
  "setOpacity": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "unlistenImageChange": function () { },
  "xa": function () { }
};
ol.style.Stroke.prototype = {
  "clone": function () { },
  "getColor": function () { },
  "getLineCap": function () { },
  "getLineDash": function () { },
  "getLineDashOffset": function () { },
  "getLineJoin": function () { },
  "getMiterLimit": function () { },
  "getWidth": function () { },
  "setColor": function () { },
  "setLineCap": function () { },
  "setLineDash": function () { },
  "setLineDashOffset": function () { },
  "setLineJoin": function () { },
  "setMiterLimit": function () { },
  "setWidth": function () { }
};
ol.style.StrokePattern.prototype = {
  "clone": function () { },
  "constructor": function () { },
  "getColor": function () { },
  "getImage": function () { },
  "getLineCap": function () { },
  "getLineDash": function () { },
  "getLineDashOffset": function () { },
  "getLineJoin": function () { },
  "getMiterLimit": function () { },
  "getPattern_": function () { },
  "getWidth": function () { },
  "setColor": function () { },
  "setLineCap": function () { },
  "setLineDash": function () { },
  "setLineDashOffset": function () { },
  "setLineJoin": function () { },
  "setMiterLimit": function () { },
  "setWidth": function () { }
};
ol.style.Style.prototype = {
  "clone": function () { },
  "getFill": function () { },
  "getGeometry": function () { },
  "getGeometryFunction": function () { },
  "getHitDetectionRenderer": function () { },
  "getImage": function () { },
  "getRenderer": function () { },
  "getStroke": function () { },
  "getText": function () { },
  "getZIndex": function () { },
  "setFill": function () { },
  "setGeometry": function () { },
  "setHitDetectionRenderer": function () { },
  "setImage": function () { },
  "setRenderer": function () { },
  "setStroke": function () { },
  "setText": function () { },
  "setZIndex": function () { }
};
ol.style.Text.prototype = {
  "clone": function () { },
  "getBackgroundFill": function () { },
  "getBackgroundStroke": function () { },
  "getFill": function () { },
  "getFont": function () { },
  "getMaxAngle": function () { },
  "getOffsetX": function () { },
  "getOffsetY": function () { },
  "getOverflow": function () { },
  "getPadding": function () { },
  "getPlacement": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getStroke": function () { },
  "getText": function () { },
  "getTextAlign": function () { },
  "getTextBaseline": function () { },
  "setBackgroundFill": function () { },
  "setBackgroundStroke": function () { },
  "setFill": function () { },
  "setFont": function () { },
  "setMaxAngle": function () { },
  "setOffsetX": function () { },
  "setOffsetY": function () { },
  "setOverflow": function () { },
  "setPadding": function () { },
  "setPlacement": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "setStroke": function () { },
  "setText": function () { },
  "setTextAlign": function () { },
  "setTextBaseline": function () { }
};
ol.style.TextPath.prototype = {
  "clone": function () { },
  "constructor": function () { },
  "getBackgroundFill": function () { },
  "getBackgroundStroke": function () { },
  "getFill": function () { },
  "getFont": function () { },
  "getMaxAngle": function () { },
  "getMinWidth": function () { },
  "getOffsetX": function () { },
  "getOffsetY": function () { },
  "getOverflow": function () { },
  "getPadding": function () { },
  "getPlacement": function () { },
  "getRotateWithView": function () { },
  "getRotation": function () { },
  "getScale": function () { },
  "getScaleArray": function () { },
  "getStroke": function () { },
  "getText": function () { },
  "getTextAlign": function () { },
  "getTextBaseline": function () { },
  "getTextOverflow": function () { },
  "setBackgroundFill": function () { },
  "setBackgroundStroke": function () { },
  "setFill": function () { },
  "setFont": function () { },
  "setMaxAngle": function () { },
  "setOffsetX": function () { },
  "setOffsetY": function () { },
  "setOverflow": function () { },
  "setPadding": function () { },
  "setPlacement": function () { },
  "setRotateWithView": function () { },
  "setRotation": function () { },
  "setScale": function () { },
  "setStroke": function () { },
  "setText": function () { },
  "setTextAlign": function () { },
  "setTextBaseline": function () { }
};
ol.tilegrid.TileGrid.prototype = {
  "Co": function () { },
  "Po": function () { },
  "Ro": function () { },
  "forEachTileCoord": function () { },
  "forEachTileCoordParentTileRange": function () { },
  "getExtent": function () { },
  "getFullTileRange": function () { },
  "getMaxZoom": function () { },
  "getMinZoom": function () { },
  "getOrigin": function () { },
  "getResolution": function () { },
  "getResolutions": function () { },
  "getTileCoordCenter": function () { },
  "getTileCoordChildTileRange": function () { },
  "getTileCoordExtent": function () { },
  "getTileCoordForCoordAndResolution": function () { },
  "getTileCoordForCoordAndZ": function () { },
  "getTileCoordResolution": function () { },
  "getTileRangeExtent": function () { },
  "getTileRangeForExtentAndZ": function () { },
  "getTileRangeForTileCoordAndZ": function () { },
  "getTileSize": function () { },
  "getZForResolution": function () { }
};
ol.tilegrid.WMTS.prototype = {
  "Co": function () { },
  "Po": function () { },
  "Ro": function () { },
  "constructor": function () { },
  "forEachTileCoord": function () { },
  "forEachTileCoordParentTileRange": function () { },
  "getExtent": function () { },
  "getFullTileRange": function () { },
  "getMatrixId": function () { },
  "getMatrixIds": function () { },
  "getMaxZoom": function () { },
  "getMinZoom": function () { },
  "getOrigin": function () { },
  "getResolution": function () { },
  "getResolutions": function () { },
  "getTileCoordCenter": function () { },
  "getTileCoordChildTileRange": function () { },
  "getTileCoordExtent": function () { },
  "getTileCoordForCoordAndResolution": function () { },
  "getTileCoordForCoordAndZ": function () { },
  "getTileCoordResolution": function () { },
  "getTileRangeExtent": function () { },
  "getTileRangeForExtentAndZ": function () { },
  "getTileRangeForTileCoordAndZ": function () { },
  "getTileSize": function () { },
  "getZForResolution": function () { }
};
ol.webgl.Buffer.prototype = {
  "fromArray": function () { },
  "fromArrayBuffer": function () { },
  "getArray": function () { },
  "getSize": function () { },
  "getType": function () { },
  "getUsage": function () { },
  "ofSize": function () { }
};
ol.webgl.Helper.prototype = {
  "applyFrameState": function () { },
  "applyUniforms": function () { },
  "bindBuffer": function () { },
  "canvasCacheKeyMatches": function () { },
  "compileShader": function () { },
  "constructor": function () { },
  "createTexture": function () { },
  "deleteBuffer": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "drawElements": function () { },
  "enableAttributes": function () { },
  "finalizeDraw": function () { },
  "flushBufferData": function () { },
  "getAttributeLocation": function () { },
  "getCanvas": function () { },
  "getExtension": function () { },
  "getGL": function () { },
  "getProgram": function () { },
  "getUniformLocation": function () { },
  "handleWebGLContextLost": function () { },
  "handleWebGLContextRestored": function () { },
  "makeProjectionTransform": function () { },
  "prepareDraw": function () { },
  "prepareDrawToRenderTarget": function () { },
  "setUniformFloatValue": function () { },
  "setUniformFloatVec4": function () { },
  "setUniformMatrixValue": function () { },
  "setUniforms": function () { },
  "ss": function () { },
  "useProgram": function () { }
};
ol.webgl.PaletteTexture.prototype = {
  "getTexture": function () { }
};
ol.webgl.PostProcessingPass.prototype = {
  "apply": function () { },
  "applyUniforms": function () { },
  "getFrameBuffer": function () { },
  "getGL": function () { },
  "init": function () { }
};
ol.webgl.RenderTarget.prototype = {
  "clearCachedData": function () { },
  "getFramebuffer": function () { },
  "getSize": function () { },
  "getTexture": function () { },
  "readAll": function () { },
  "readPixel": function () { },
  "setSize": function () { },
  "vs": function () { }
};
ol.webgl.ShaderBuilder.ShaderBuilder.prototype = {
  "addAttribute": function () { },
  "addUniform": function () { },
  "addVarying": function () { },
  "getColorExpression": function () { },
  "getFragmentDiscardExpression": function () { },
  "getOffsetExpression": function () { },
  "getSizeExpression": function () { },
  "getSymbolFragmentShader": function () { },
  "getSymbolVertexShader": function () { },
  "getTextureCoordinateExpression": function () { },
  "setColorExpression": function () { },
  "setFragmentDiscardExpression": function () { },
  "setRotationExpression": function () { },
  "setSizeExpression": function () { },
  "setSymbolOffsetExpression": function () { },
  "setSymbolRotateWithView": function () { },
  "setTextureCoordinateExpression": function () { }
};
ol.webgl.TileTexture.prototype = {
  "Ds": function () { },
  "addEventListener": function () { },
  "constructor": function () { },
  "dispatchEvent": function () { },
  "dispose": function () { },
  "disposeInternal": function () { },
  "getListeners": function () { },
  "getPixelData": function () { },
  "hasListener": function () { },
  "hr": function () { },
  "removeEventListener": function () { },
  "setTile": function () { }
};
/**********************************************************************
 * End Generated Extern for ol
/**********************************************************************/